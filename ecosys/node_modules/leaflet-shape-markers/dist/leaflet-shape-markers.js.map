{"version":3,"file":"leaflet-shape-markers.js","sources":["../package.json","../src/ShapeMarker.js","../src/CrossMarker.js","../src/XMarker.js","../src/SquareMarker.js","../src/DiamondMarker.js"],"sourcesContent":["{\n  \"name\": \"leaflet-shape-markers\",\n  \"description\": \"Shape markers of fixed size for point symbols\",\n  \"version\": \"1.0.6\",\n  \"author\": \"Rachel Nehmer <rnehmer@esri.com>\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Esri/Leaflet.shapeMarkers/issues\"\n  },\n  \"contributors\": [\n    \"Rachel Nehmer <rnehmer@esri.com>\",\n    \"John Gravois <jgravois@esri.com>\"\n  ],\n  \"dependencies\": {\n    \"leaflet\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"karma\": \"^0.12.24\",\n    \"karma-mocha\": \"^0.1.0\",\n    \"karma-chai-sinon\": \"^0.1.3\",\n    \"karma-coverage\": \"^0.5.3\",\n    \"karma-mocha-reporter\": \"^0.2.5\",\n    \"karma-phantomjs-launcher\": \"^0.2.0\",\n    \"karma-sourcemap-loader\": \"^0.3.5\",\n    \"semistandard\": \"^7.0.5\",\n    \"gh-release\": \"^2.0.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"rollup\": \"^0.25.4\",\n    \"rollup-plugin-json\": \"^2.0.0\",\n    \"rollup-plugin-node-resolve\": \"^1.4.0\",\n    \"rollup-plugin-uglify\": \"^0.3.1\",\n    \"uglify-js\": \"^2.4.23\",\n    \"watch\": \"^0.17.1\"\n  },\n  \"homepage\": \"http://github.com/Esri/Leaflet.shapeMarkers\",\n  \"module\": \"src/ShapeMarkers.js\",\n  \"jsnext:main\": \"src/ShapeMarkers.js\",\n  \"jspm\": {\n    \"registry\": \"npm\",\n    \"format\": \"es6\"\n  },\n  \"keywords\": [\"Leaflet\", \"GIS\", \"Esri\"],\n  \"license\": \"Apache-2.0\",\n  \"main\": \"dist/leaflet-shape-markers.js\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:Esri/Leaflet.shapeMarkers.git\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"npm run build\",\n    \"prebuild\": \"mkdirp dist\",\n    \"build\": \"rollup -c scripts/debug.js && rollup -c scripts/production.js\",\n    \"release\": \"./scripts/release.sh\",\n    \"lint\": \"semistandard src/*.js\",\n    \"pretest\": \"npm run build\",\n    \"start\": \"watch 'npm run build' src & http-server -p 5000 -c-1 -o\",\n    \"test\": \"npm run lint && karma start\"\n  }\n}\n","import L from 'leaflet';\n\nexport var ShapeMarker = L.Path.extend({\n\n  initialize: function (latlng, size, options) {\n    L.setOptions(this, options);\n    this._size = size;\n    this._latlng = L.latLng(latlng);\n    this._svgCanvasIncludes();\n  },\n\n  toGeoJSON: function () {\n    return L.GeoJSON.getFeature(this, {\n      type: 'Point',\n      coordinates: L.GeoJSON.latLngToCoords(this.getLatLng())\n    });\n  },\n\n  _svgCanvasIncludes: function () {\n    // implement in sub class\n  },\n\n  _project: function () {\n    this._point = this._map.latLngToLayerPoint(this._latlng);\n  },\n\n  _update: function () {\n    if (this._map) {\n      this._updatePath();\n    }\n  },\n\n  _updatePath: function () {\n    // implement in sub class\n  },\n\n  setLatLng: function (latlng) {\n    this._latlng = L.latLng(latlng);\n    this.redraw();\n    return this.fire('move', {latlng: this._latlng});\n  },\n\n  getLatLng: function () {\n    return this._latlng;\n  },\n\n  setSize: function (size) {\n    this._size = size;\n    return this.redraw();\n  },\n\n  getSize: function () {\n    return this._size;\n  }\n});\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var CrossMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateCrossMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n\n        ctx.moveTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var crossMarker = function (latlng, size, options) {\n  return new CrossMarker(latlng, size, options);\n};\n\nexport default crossMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var XMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateXMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var xMarker = function (latlng, size, options) {\n  return new XMarker(latlng, size, options);\n};\n\nexport default xMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var SquareMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateSquareMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y - offset);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var squareMarker = function (latlng, size, options) {\n  return new SquareMarker(latlng, size, options);\n};\n\nexport default squareMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var DiamondMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateDiamondMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var diamondMarker = function (latlng, size, options) {\n  return new DiamondMarker(latlng, size, options);\n};\n\nexport default diamondMarker;\n"],"names":["ShapeMarker","L","Path","extend","initialize","latlng","size","options","setOptions","this","_size","_latlng","latLng","_svgCanvasIncludes","toGeoJSON","GeoJSON","getFeature","type","coordinates","latLngToCoords","getLatLng","_project","_point","_map","latLngToLayerPoint","_update","_updatePath","setLatLng","redraw","fire","setSize","getSize","CrossMarker","prototype","call","_renderer","_updateCrossMarker","Canvas","include","layer","offset","ctx","_ctx","beginPath","moveTo","x","y","lineTo","_fillStroke","SVG","Browser","vml","_round","Math","round","str","_setPath","crossMarker","XMarker","_updateXMarker","xMarker","SquareMarker","fill","_updateSquareMarker","closePath","svg","squareMarker","DiamondMarker","_updateDiamondMarker","diamondMarker"],"mappings":"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"}