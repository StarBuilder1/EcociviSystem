{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* @preserve\n* @terraformer/arcgis - v2.1.1 - MIT\n* Copyright (c) 2012-2022 Environmental Systems Research Institute, Inc.\n* Tue Aug 02 2022 14:23:48 GMT-0700 (Pacific Daylight Time)\n*/\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar edgeIntersectsEdge = function edgeIntersectsEdge(a1, a2, b1, b2) {\n  var uaT = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n  var ubT = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n  var uB = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n  if (uB !== 0) {\n    var ua = uaT / uB;\n    var ub = ubT / uB;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n      return true;\n    }\n  }\n  return false;\n};\nvar coordinatesContainPoint = function coordinatesContainPoint(coordinates, point) {\n  var contains = false;\n  for (var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n    if ((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1] || coordinates[j][1] <= point[1] && point[1] < coordinates[i][1]) && point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0]) {\n      contains = !contains;\n    }\n  }\n  return contains;\n};\nvar pointsEqual = function pointsEqual(a, b) {\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nvar arrayIntersectsArray = function arrayIntersectsArray(a, b) {\n  for (var i = 0; i < a.length - 1; i++) {\n    for (var j = 0; j < b.length - 1; j++) {\n      if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar closeRing = function closeRing(coordinates) {\n  if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n    coordinates.push(coordinates[0]);\n  }\n  return coordinates;\n}; // determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n// or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n// points-are-in-clockwise-order\n\nvar ringIsClockwise = function ringIsClockwise(ringToTest) {\n  var total = 0;\n  var i = 0;\n  var rLength = ringToTest.length;\n  var pt1 = ringToTest[i];\n  var pt2;\n  for (i; i < rLength - 1; i++) {\n    pt2 = ringToTest[i + 1];\n    total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n    pt1 = pt2;\n  }\n  return total >= 0;\n}; // This function ensures that rings are oriented in the right directions\n// from http://jsperf.com/cloning-an-object/2\n\nvar shallowClone = function shallowClone(obj) {\n  var target = {};\n  for (var i in obj) {\n    // both arcgis attributes and geojson props are just hardcoded keys\n    if (obj.hasOwnProperty(i)) {\n      // eslint-disable-line no-prototype-builtins\n      target[i] = obj[i];\n    }\n  }\n  return target;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar coordinatesContainCoordinates = function coordinatesContainCoordinates(outer, inner) {\n  var intersects = arrayIntersectsArray(outer, inner);\n  var contains = coordinatesContainPoint(outer, inner[0]);\n  if (!intersects && contains) {\n    return true;\n  }\n  return false;\n}; // do any polygons in this array contain any other polygons in this array?\n// used for checking for holes in arcgis rings\n\nvar convertRingsToGeoJSON = function convertRingsToGeoJSON(rings) {\n  var outerRings = [];\n  var holes = [];\n  var x; // iterator\n\n  var outerRing; // current outer ring being evaluated\n\n  var hole; // current hole being evaluated\n  // for each ring\n\n  for (var r = 0; r < rings.length; r++) {\n    var ring = closeRing(rings[r].slice(0));\n    if (ring.length < 4) {\n      continue;\n    } // is this ring an outer ring? is it clockwise?\n\n    if (ringIsClockwise(ring)) {\n      var polygon = [ring.slice().reverse()]; // wind outer rings counterclockwise for RFC 7946 compliance\n\n      outerRings.push(polygon); // push to outer rings\n    } else {\n      holes.push(ring.slice().reverse()); // wind inner rings clockwise for RFC 7946 compliance\n    }\n  }\n  var uncontainedHoles = []; // while there are holes left...\n\n  while (holes.length) {\n    // pop a hole off out stack\n    hole = holes.pop(); // loop over all outer rings and see if they contain our hole.\n\n    var contained = false;\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n      if (coordinatesContainCoordinates(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        contained = true;\n        break;\n      }\n    } // ring is not contained in any outer ring\n    // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n\n    if (!contained) {\n      uncontainedHoles.push(hole);\n    }\n  } // if we couldn't match any holes using contains we can try intersects...\n\n  while (uncontainedHoles.length) {\n    // pop a hole off out stack\n    hole = uncontainedHoles.pop(); // loop over all outer rings and see if any intersect our hole.\n\n    var intersects = false;\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n      if (arrayIntersectsArray(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        intersects = true;\n        break;\n      }\n    }\n    if (!intersects) {\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  if (outerRings.length === 1) {\n    return {\n      type: 'Polygon',\n      coordinates: outerRings[0]\n    };\n  } else {\n    return {\n      type: 'MultiPolygon',\n      coordinates: outerRings\n    };\n  }\n};\nvar getId = function getId(attributes, idAttribute) {\n  var keys = idAttribute ? [idAttribute, 'OBJECTID', 'FID'] : ['OBJECTID', 'FID'];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key in attributes && (typeof attributes[key] === 'string' || typeof attributes[key] === 'number')) {\n      return attributes[key];\n    }\n  }\n  throw Error('No valid id attribute found');\n};\nvar arcgisToGeoJSON = function arcgisToGeoJSON(arcgis, idAttribute) {\n  var geojson = {};\n  if (arcgis.features) {\n    geojson.type = 'FeatureCollection';\n    geojson.features = [];\n    for (var i = 0; i < arcgis.features.length; i++) {\n      geojson.features.push(arcgisToGeoJSON(arcgis.features[i], idAttribute));\n    }\n  }\n  if (typeof arcgis.x === 'number' && typeof arcgis.y === 'number') {\n    geojson.type = 'Point';\n    geojson.coordinates = [arcgis.x, arcgis.y];\n    if (typeof arcgis.z === 'number') {\n      geojson.coordinates.push(arcgis.z);\n    }\n  }\n  if (arcgis.points) {\n    geojson.type = 'MultiPoint';\n    geojson.coordinates = arcgis.points.slice(0);\n  }\n  if (arcgis.paths) {\n    if (arcgis.paths.length === 1) {\n      geojson.type = 'LineString';\n      geojson.coordinates = arcgis.paths[0].slice(0);\n    } else {\n      geojson.type = 'MultiLineString';\n      geojson.coordinates = arcgis.paths.slice(0);\n    }\n  }\n  if (arcgis.rings) {\n    geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n  }\n  if (typeof arcgis.xmin === 'number' && typeof arcgis.ymin === 'number' && typeof arcgis.xmax === 'number' && typeof arcgis.ymax === 'number') {\n    geojson.type = 'Polygon';\n    geojson.coordinates = [[[arcgis.xmax, arcgis.ymax], [arcgis.xmin, arcgis.ymax], [arcgis.xmin, arcgis.ymin], [arcgis.xmax, arcgis.ymin], [arcgis.xmax, arcgis.ymax]]];\n  }\n  if (arcgis.geometry || arcgis.attributes) {\n    geojson.type = 'Feature';\n    geojson.geometry = arcgis.geometry ? arcgisToGeoJSON(arcgis.geometry) : null;\n    geojson.properties = arcgis.attributes ? shallowClone(arcgis.attributes) : null;\n    if (arcgis.attributes) {\n      try {\n        geojson.id = getId(arcgis.attributes, idAttribute);\n      } catch (err) {// don't set an id\n      }\n    }\n  } // if no valid geometry was encountered\n\n  if (JSON.stringify(geojson.geometry) === JSON.stringify({})) {\n    geojson.geometry = null;\n  }\n  if (arcgis.spatialReference && arcgis.spatialReference.wkid && arcgis.spatialReference.wkid !== 4326) {\n    console.warn('Object converted in non-standard crs - ' + JSON.stringify(arcgis.spatialReference));\n  }\n  return geojson;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n// outer rings are clockwise, holes are counterclockwise\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\nvar orientRings = function orientRings(poly) {\n  var output = [];\n  var polygon = poly.slice(0);\n  var outerRing = closeRing(polygon.shift().slice(0));\n  if (outerRing.length >= 4) {\n    if (!ringIsClockwise(outerRing)) {\n      outerRing.reverse();\n    }\n    output.push(outerRing);\n    for (var i = 0; i < polygon.length; i++) {\n      var hole = closeRing(polygon[i].slice(0));\n      if (hole.length >= 4) {\n        if (ringIsClockwise(hole)) {\n          hole.reverse();\n        }\n        output.push(hole);\n      }\n    }\n  }\n  return output;\n}; // This function flattens holes in multipolygons to one array of polygons\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\nvar flattenMultiPolygonRings = function flattenMultiPolygonRings(rings) {\n  var output = [];\n  for (var i = 0; i < rings.length; i++) {\n    var polygon = orientRings(rings[i]);\n    for (var x = polygon.length - 1; x >= 0; x--) {\n      var ring = polygon[x].slice(0);\n      output.push(ring);\n    }\n  }\n  return output;\n};\nvar geojsonToArcGIS = function geojsonToArcGIS(geojson, idAttribute) {\n  idAttribute = idAttribute || 'OBJECTID';\n  var spatialReference = {\n    wkid: 4326\n  };\n  var result = {};\n  var i;\n  switch (geojson.type) {\n    case 'Point':\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n      if (geojson.coordinates[2] != null) {\n        result.z = geojson.coordinates[2];\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiPoint':\n      result.points = geojson.coordinates.slice(0);\n      if (geojson.coordinates[0][2] != null) {\n        result.hasZ = true;\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case 'LineString':\n      result.paths = [geojson.coordinates.slice(0)];\n      if (geojson.coordinates[0][2] != null) {\n        result.hasZ = true;\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiLineString':\n      result.paths = geojson.coordinates.slice(0);\n      if (geojson.coordinates[0][0][2] != null) {\n        result.hasZ = true;\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case 'Polygon':\n      result.rings = orientRings(geojson.coordinates.slice(0));\n      if (geojson.coordinates[0][0][2] != null) {\n        result.hasZ = true;\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiPolygon':\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n      if (geojson.coordinates[0][0][0][2] != null) {\n        result.hasZ = true;\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case 'Feature':\n      if (geojson.geometry) {\n        result.geometry = geojsonToArcGIS(geojson.geometry, idAttribute);\n      }\n      result.attributes = geojson.properties ? shallowClone(geojson.properties) : {};\n      if (geojson.id) {\n        result.attributes[idAttribute] = geojson.id;\n      }\n      break;\n    case 'FeatureCollection':\n      result = [];\n      for (i = 0; i < geojson.features.length; i++) {\n        result.push(geojsonToArcGIS(geojson.features[i], idAttribute));\n      }\n      break;\n    case 'GeometryCollection':\n      result = [];\n      for (i = 0; i < geojson.geometries.length; i++) {\n        result.push(geojsonToArcGIS(geojson.geometries[i], idAttribute));\n      }\n      break;\n  }\n  return result;\n};\nexport { arcgisToGeoJSON, geojsonToArcGIS };","map":{"version":3,"names":["edgeIntersectsEdge","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","coordinatesContainPoint","coordinates","point","contains","i","l","length","j","pointsEqual","a","b","arrayIntersectsArray","closeRing","push","ringIsClockwise","ringToTest","total","rLength","pt1","pt2","shallowClone","obj","target","hasOwnProperty","coordinatesContainCoordinates","outer","inner","intersects","convertRingsToGeoJSON","rings","outerRings","holes","x","outerRing","hole","r","ring","slice","polygon","reverse","uncontainedHoles","pop","contained","type","getId","attributes","idAttribute","keys","key","Error","arcgisToGeoJSON","arcgis","geojson","features","y","z","points","paths","xmin","ymin","xmax","ymax","geometry","properties","id","err","JSON","stringify","spatialReference","wkid","console","warn","orientRings","poly","output","shift","flattenMultiPolygonRings","geojsonToArcGIS","result","hasZ","geometries"],"sources":["E:/Working/IP_proj/EcosystemCivi/ecosys/node_modules/@terraformer/arcgis/dist/t-arcgis.esm.js"],"sourcesContent":["/* @preserve\n* @terraformer/arcgis - v2.1.1 - MIT\n* Copyright (c) 2012-2022 Environmental Systems Research Institute, Inc.\n* Tue Aug 02 2022 14:23:48 GMT-0700 (Pacific Daylight Time)\n*/\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar edgeIntersectsEdge = function edgeIntersectsEdge(a1, a2, b1, b2) {\n  var uaT = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n  var ubT = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n  var uB = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n  if (uB !== 0) {\n    var ua = uaT / uB;\n    var ub = ubT / uB;\n\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n      return true;\n    }\n  }\n\n  return false;\n};\nvar coordinatesContainPoint = function coordinatesContainPoint(coordinates, point) {\n  var contains = false;\n\n  for (var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n    if ((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1] || coordinates[j][1] <= point[1] && point[1] < coordinates[i][1]) && point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0]) {\n      contains = !contains;\n    }\n  }\n\n  return contains;\n};\nvar pointsEqual = function pointsEqual(a, b) {\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nvar arrayIntersectsArray = function arrayIntersectsArray(a, b) {\n  for (var i = 0; i < a.length - 1; i++) {\n    for (var j = 0; j < b.length - 1; j++) {\n      if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar closeRing = function closeRing(coordinates) {\n  if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n    coordinates.push(coordinates[0]);\n  }\n\n  return coordinates;\n}; // determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n// or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n// points-are-in-clockwise-order\n\nvar ringIsClockwise = function ringIsClockwise(ringToTest) {\n  var total = 0;\n  var i = 0;\n  var rLength = ringToTest.length;\n  var pt1 = ringToTest[i];\n  var pt2;\n\n  for (i; i < rLength - 1; i++) {\n    pt2 = ringToTest[i + 1];\n    total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n    pt1 = pt2;\n  }\n\n  return total >= 0;\n}; // This function ensures that rings are oriented in the right directions\n// from http://jsperf.com/cloning-an-object/2\n\nvar shallowClone = function shallowClone(obj) {\n  var target = {};\n\n  for (var i in obj) {\n    // both arcgis attributes and geojson props are just hardcoded keys\n    if (obj.hasOwnProperty(i)) {\n      // eslint-disable-line no-prototype-builtins\n      target[i] = obj[i];\n    }\n  }\n\n  return target;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar coordinatesContainCoordinates = function coordinatesContainCoordinates(outer, inner) {\n  var intersects = arrayIntersectsArray(outer, inner);\n  var contains = coordinatesContainPoint(outer, inner[0]);\n\n  if (!intersects && contains) {\n    return true;\n  }\n\n  return false;\n}; // do any polygons in this array contain any other polygons in this array?\n// used for checking for holes in arcgis rings\n\n\nvar convertRingsToGeoJSON = function convertRingsToGeoJSON(rings) {\n  var outerRings = [];\n  var holes = [];\n  var x; // iterator\n\n  var outerRing; // current outer ring being evaluated\n\n  var hole; // current hole being evaluated\n  // for each ring\n\n  for (var r = 0; r < rings.length; r++) {\n    var ring = closeRing(rings[r].slice(0));\n\n    if (ring.length < 4) {\n      continue;\n    } // is this ring an outer ring? is it clockwise?\n\n\n    if (ringIsClockwise(ring)) {\n      var polygon = [ring.slice().reverse()]; // wind outer rings counterclockwise for RFC 7946 compliance\n\n      outerRings.push(polygon); // push to outer rings\n    } else {\n      holes.push(ring.slice().reverse()); // wind inner rings clockwise for RFC 7946 compliance\n    }\n  }\n\n  var uncontainedHoles = []; // while there are holes left...\n\n  while (holes.length) {\n    // pop a hole off out stack\n    hole = holes.pop(); // loop over all outer rings and see if they contain our hole.\n\n    var contained = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n\n      if (coordinatesContainCoordinates(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        contained = true;\n        break;\n      }\n    } // ring is not contained in any outer ring\n    // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n\n\n    if (!contained) {\n      uncontainedHoles.push(hole);\n    }\n  } // if we couldn't match any holes using contains we can try intersects...\n\n\n  while (uncontainedHoles.length) {\n    // pop a hole off out stack\n    hole = uncontainedHoles.pop(); // loop over all outer rings and see if any intersect our hole.\n\n    var intersects = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n\n      if (arrayIntersectsArray(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        intersects = true;\n        break;\n      }\n    }\n\n    if (!intersects) {\n      outerRings.push([hole.reverse()]);\n    }\n  }\n\n  if (outerRings.length === 1) {\n    return {\n      type: 'Polygon',\n      coordinates: outerRings[0]\n    };\n  } else {\n    return {\n      type: 'MultiPolygon',\n      coordinates: outerRings\n    };\n  }\n};\n\nvar getId = function getId(attributes, idAttribute) {\n  var keys = idAttribute ? [idAttribute, 'OBJECTID', 'FID'] : ['OBJECTID', 'FID'];\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (key in attributes && (typeof attributes[key] === 'string' || typeof attributes[key] === 'number')) {\n      return attributes[key];\n    }\n  }\n\n  throw Error('No valid id attribute found');\n};\n\nvar arcgisToGeoJSON = function arcgisToGeoJSON(arcgis, idAttribute) {\n  var geojson = {};\n\n  if (arcgis.features) {\n    geojson.type = 'FeatureCollection';\n    geojson.features = [];\n\n    for (var i = 0; i < arcgis.features.length; i++) {\n      geojson.features.push(arcgisToGeoJSON(arcgis.features[i], idAttribute));\n    }\n  }\n\n  if (typeof arcgis.x === 'number' && typeof arcgis.y === 'number') {\n    geojson.type = 'Point';\n    geojson.coordinates = [arcgis.x, arcgis.y];\n\n    if (typeof arcgis.z === 'number') {\n      geojson.coordinates.push(arcgis.z);\n    }\n  }\n\n  if (arcgis.points) {\n    geojson.type = 'MultiPoint';\n    geojson.coordinates = arcgis.points.slice(0);\n  }\n\n  if (arcgis.paths) {\n    if (arcgis.paths.length === 1) {\n      geojson.type = 'LineString';\n      geojson.coordinates = arcgis.paths[0].slice(0);\n    } else {\n      geojson.type = 'MultiLineString';\n      geojson.coordinates = arcgis.paths.slice(0);\n    }\n  }\n\n  if (arcgis.rings) {\n    geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n  }\n\n  if (typeof arcgis.xmin === 'number' && typeof arcgis.ymin === 'number' && typeof arcgis.xmax === 'number' && typeof arcgis.ymax === 'number') {\n    geojson.type = 'Polygon';\n    geojson.coordinates = [[[arcgis.xmax, arcgis.ymax], [arcgis.xmin, arcgis.ymax], [arcgis.xmin, arcgis.ymin], [arcgis.xmax, arcgis.ymin], [arcgis.xmax, arcgis.ymax]]];\n  }\n\n  if (arcgis.geometry || arcgis.attributes) {\n    geojson.type = 'Feature';\n    geojson.geometry = arcgis.geometry ? arcgisToGeoJSON(arcgis.geometry) : null;\n    geojson.properties = arcgis.attributes ? shallowClone(arcgis.attributes) : null;\n\n    if (arcgis.attributes) {\n      try {\n        geojson.id = getId(arcgis.attributes, idAttribute);\n      } catch (err) {// don't set an id\n      }\n    }\n  } // if no valid geometry was encountered\n\n\n  if (JSON.stringify(geojson.geometry) === JSON.stringify({})) {\n    geojson.geometry = null;\n  }\n\n  if (arcgis.spatialReference && arcgis.spatialReference.wkid && arcgis.spatialReference.wkid !== 4326) {\n    console.warn('Object converted in non-standard crs - ' + JSON.stringify(arcgis.spatialReference));\n  }\n\n  return geojson;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n// outer rings are clockwise, holes are counterclockwise\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\nvar orientRings = function orientRings(poly) {\n  var output = [];\n  var polygon = poly.slice(0);\n  var outerRing = closeRing(polygon.shift().slice(0));\n\n  if (outerRing.length >= 4) {\n    if (!ringIsClockwise(outerRing)) {\n      outerRing.reverse();\n    }\n\n    output.push(outerRing);\n\n    for (var i = 0; i < polygon.length; i++) {\n      var hole = closeRing(polygon[i].slice(0));\n\n      if (hole.length >= 4) {\n        if (ringIsClockwise(hole)) {\n          hole.reverse();\n        }\n\n        output.push(hole);\n      }\n    }\n  }\n\n  return output;\n}; // This function flattens holes in multipolygons to one array of polygons\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\n\nvar flattenMultiPolygonRings = function flattenMultiPolygonRings(rings) {\n  var output = [];\n\n  for (var i = 0; i < rings.length; i++) {\n    var polygon = orientRings(rings[i]);\n\n    for (var x = polygon.length - 1; x >= 0; x--) {\n      var ring = polygon[x].slice(0);\n      output.push(ring);\n    }\n  }\n\n  return output;\n};\n\nvar geojsonToArcGIS = function geojsonToArcGIS(geojson, idAttribute) {\n  idAttribute = idAttribute || 'OBJECTID';\n  var spatialReference = {\n    wkid: 4326\n  };\n  var result = {};\n  var i;\n\n  switch (geojson.type) {\n    case 'Point':\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n\n      if (geojson.coordinates[2] != null) {\n        result.z = geojson.coordinates[2];\n      }\n\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiPoint':\n      result.points = geojson.coordinates.slice(0);\n\n      if (geojson.coordinates[0][2] != null) {\n        result.hasZ = true;\n      }\n\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'LineString':\n      result.paths = [geojson.coordinates.slice(0)];\n\n      if (geojson.coordinates[0][2] != null) {\n        result.hasZ = true;\n      }\n\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiLineString':\n      result.paths = geojson.coordinates.slice(0);\n\n      if (geojson.coordinates[0][0][2] != null) {\n        result.hasZ = true;\n      }\n\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'Polygon':\n      result.rings = orientRings(geojson.coordinates.slice(0));\n\n      if (geojson.coordinates[0][0][2] != null) {\n        result.hasZ = true;\n      }\n\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiPolygon':\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n\n      if (geojson.coordinates[0][0][0][2] != null) {\n        result.hasZ = true;\n      }\n\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'Feature':\n      if (geojson.geometry) {\n        result.geometry = geojsonToArcGIS(geojson.geometry, idAttribute);\n      }\n\n      result.attributes = geojson.properties ? shallowClone(geojson.properties) : {};\n\n      if (geojson.id) {\n        result.attributes[idAttribute] = geojson.id;\n      }\n\n      break;\n\n    case 'FeatureCollection':\n      result = [];\n\n      for (i = 0; i < geojson.features.length; i++) {\n        result.push(geojsonToArcGIS(geojson.features[i], idAttribute));\n      }\n\n      break;\n\n    case 'GeometryCollection':\n      result = [];\n\n      for (i = 0; i < geojson.geometries.length; i++) {\n        result.push(geojsonToArcGIS(geojson.geometries[i], idAttribute));\n      }\n\n      break;\n  }\n\n  return result;\n};\n\nexport { arcgisToGeoJSON, geojsonToArcGIS };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}