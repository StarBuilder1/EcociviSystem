{"ast":null,"code":"import { latLng } from 'leaflet';\nimport { Identify } from './Identify';\nimport { responseToFeatureCollection, boundsToExtent, _setGeometry } from '../Util';\nexport var IdentifyFeatures = Identify.extend({\n  setters: {\n    layers: 'layers',\n    precision: 'geometryPrecision',\n    tolerance: 'tolerance',\n    // skipped implementing this (for now) because the REST service implementation isnt consistent between operations.\n    // 'transform': 'datumTransformations'\n    returnGeometry: 'returnGeometry'\n  },\n  params: {\n    sr: 4326,\n    layers: 'all',\n    tolerance: 3,\n    returnGeometry: true\n  },\n  on: function (map) {\n    var extent = boundsToExtent(map.getBounds());\n    var size = map.getSize();\n    this.params.imageDisplay = [size.x, size.y, 96];\n    this.params.mapExtent = [extent.xmin, extent.ymin, extent.xmax, extent.ymax];\n    return this;\n  },\n  at: function (geometry) {\n    // cast lat, long pairs in raw array form manually\n    if (geometry.length === 2) {\n      geometry = latLng(geometry);\n    }\n    this._setGeometryParams(geometry);\n    return this;\n  },\n  layerDef: function (id, where) {\n    this.params.layerDefs = this.params.layerDefs ? this.params.layerDefs + ';' : '';\n    this.params.layerDefs += [id, where].join(':');\n    return this;\n  },\n  simplify: function (map, factor) {\n    var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\n    this.params.maxAllowableOffset = mapWidth / map.getSize().y * factor;\n    return this;\n  },\n  run: function (callback, context) {\n    return this.request(function (error, response) {\n      // immediately invoke with an error\n      if (error) {\n        callback.call(context, error, undefined, response);\n\n        // ok no error lets just assume we have features...\n      } else {\n        var featureCollection = responseToFeatureCollection(response);\n        response.results = response.results.reverse();\n        for (var i = 0; i < featureCollection.features.length; i++) {\n          var feature = featureCollection.features[i];\n          feature.layerId = response.results[i].layerId;\n        }\n        callback.call(context, undefined, featureCollection, response);\n      }\n    });\n  },\n  _setGeometryParams: function (geometry) {\n    var converted = _setGeometry(geometry);\n    this.params.geometry = converted.geometry;\n    this.params.geometryType = converted.geometryType;\n  }\n});\nexport function identifyFeatures(options) {\n  return new IdentifyFeatures(options);\n}\nexport default identifyFeatures;","map":{"version":3,"names":["latLng","Identify","responseToFeatureCollection","boundsToExtent","_setGeometry","IdentifyFeatures","extend","setters","layers","precision","tolerance","returnGeometry","params","sr","on","map","extent","getBounds","size","getSize","imageDisplay","x","y","mapExtent","xmin","ymin","xmax","ymax","at","geometry","length","_setGeometryParams","layerDef","id","where","layerDefs","join","simplify","factor","mapWidth","Math","abs","getWest","getEast","maxAllowableOffset","run","callback","context","request","error","response","call","undefined","featureCollection","results","reverse","i","features","feature","layerId","converted","geometryType","identifyFeatures","options"],"sources":["E:/Working/IP_proj/EcosystemCivi/ecosys/node_modules/esri-leaflet/src/Tasks/IdentifyFeatures.js"],"sourcesContent":["import { latLng } from 'leaflet';\r\nimport { Identify } from './Identify';\r\nimport { responseToFeatureCollection,\r\n  boundsToExtent,\r\n  _setGeometry\r\n} from '../Util';\r\n\r\nexport var IdentifyFeatures = Identify.extend({\r\n  setters: {\r\n    layers: 'layers',\r\n    precision: 'geometryPrecision',\r\n    tolerance: 'tolerance',\r\n    // skipped implementing this (for now) because the REST service implementation isnt consistent between operations.\r\n    // 'transform': 'datumTransformations'\r\n    returnGeometry: 'returnGeometry'\r\n  },\r\n\r\n  params: {\r\n    sr: 4326,\r\n    layers: 'all',\r\n    tolerance: 3,\r\n    returnGeometry: true\r\n  },\r\n\r\n  on: function (map) {\r\n    var extent = boundsToExtent(map.getBounds());\r\n    var size = map.getSize();\r\n    this.params.imageDisplay = [size.x, size.y, 96];\r\n    this.params.mapExtent = [extent.xmin, extent.ymin, extent.xmax, extent.ymax];\r\n    return this;\r\n  },\r\n\r\n  at: function (geometry) {\r\n    // cast lat, long pairs in raw array form manually\r\n    if (geometry.length === 2) {\r\n      geometry = latLng(geometry);\r\n    }\r\n    this._setGeometryParams(geometry);\r\n    return this;\r\n  },\r\n\r\n  layerDef: function (id, where) {\r\n    this.params.layerDefs = (this.params.layerDefs) ? this.params.layerDefs + ';' : '';\r\n    this.params.layerDefs += ([id, where]).join(':');\r\n    return this;\r\n  },\r\n\r\n  simplify: function (map, factor) {\r\n    var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\r\n    this.params.maxAllowableOffset = (mapWidth / map.getSize().y) * factor;\r\n    return this;\r\n  },\r\n\r\n  run: function (callback, context) {\r\n    return this.request(function (error, response) {\r\n      // immediately invoke with an error\r\n      if (error) {\r\n        callback.call(context, error, undefined, response);\r\n\r\n      // ok no error lets just assume we have features...\r\n      } else {\r\n        var featureCollection = responseToFeatureCollection(response);\r\n        response.results = response.results.reverse();\r\n        for (var i = 0; i < featureCollection.features.length; i++) {\r\n          var feature = featureCollection.features[i];\r\n          feature.layerId = response.results[i].layerId;\r\n        }\r\n        callback.call(context, undefined, featureCollection, response);\r\n      }\r\n    });\r\n  },\r\n\r\n  _setGeometryParams: function (geometry) {\r\n    var converted = _setGeometry(geometry);\r\n    this.params.geometry = converted.geometry;\r\n    this.params.geometryType = converted.geometryType;\r\n  }\r\n});\r\n\r\nexport function identifyFeatures (options) {\r\n  return new IdentifyFeatures(options);\r\n}\r\n\r\nexport default identifyFeatures;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}