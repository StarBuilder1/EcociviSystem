{"ast":null,"code":"import _defineProperty from \"E:/Working/IP_proj/EcociviSystem/ecosys/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"leaflet/dist/leaflet.css\";\nimport $L from \"leaflet\";\nimport { DataShowMap } from \"../../../utils/map\";\nimport Global from \"../views/Globel/Global\";\nexport class AnalyzeMap extends DataShowMap {\n  constructor(...args) {\n    super(...args);\n    //Add the Austria area data\n    _defineProperty(this, \"layerGroups\", new $L.FeatureGroup().addTo(this.map));\n  }\n  //Input the Country GeoJson\n  AddGeoJson(JsonData) {\n    let myStyle = {\n      color: \"#49494b\",\n      weight: 3,\n      opacity: 0.8\n    };\n    var Json = $L.geoJSON(JsonData, {\n      style: myStyle,\n      onEachFeature: onEachFeature\n    });\n    function onEachFeature(feature, layer) {\n      layer.on({\n        click: ClickFeature\n      });\n      let popupContent;\n      if (feature.properties.ISO_A3 !== undefined) {\n        popupContent = feature.properties.name + \", <br/>\" + feature.properties.ISO_A3 + \".\";\n      } else {\n        popupContent = \"<b>Name:</b>\" + feature.properties.shape1 + \"<br/>\";\n        popupContent += '<img src=\"' + feature.properties.image + '\" width=\"300\" height=\"200\"><br/>';\n        popupContent += \"<b>Density of river:</b>\" + feature.properties.DenOfRiver + \"m²<br/>\";\n        popupContent += \"<b>Area of sealed land:</b>\" + feature.properties.Sealed + \"m²<br/>\";\n        popupContent += \"<b>Non-vegetated unsealed surfaces:</b>\" + feature.properties.NonVeUnSe + \"m²<br/>\";\n        popupContent += \"<b>Area of water:</b>\" + feature.properties.Water + \"m²<br/>\";\n        popupContent += \"<b>Snow and ice:</b>\" + feature.properties.Snow + \"m²<br/>\";\n        popupContent += \"<b>Woody:</b>\" + feature.properties.Woody + \"m²<br/>\";\n        popupContent += \"<b>Herbaceous permanent:</b>\" + feature.properties.PermanHer + \"m²<br/>\";\n        popupContent += \"<b>Herbaceous periodically:</b>\" + feature.properties.PeriodHer + \"m²<br/>\";\n        popupContent += \"<b>Reeds:</b>\" + feature.properties.Reed + \"m²<br/>\";\n      }\n      layer.bindPopup(popupContent);\n    }\n    function highlightFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        weight: 5,\n        color: \"#666\",\n        dashArray: \"\",\n        fillOpacity: 0.7\n      });\n      if (!$L.Browser.ie && !$L.Browser.opera && !$L.Browser.edge) {\n        layer.bringToFront();\n      }\n    }\n    function ClickFeature(e) {\n      let currentName = e.target.feature.properties.name;\n      console.log(currentName);\n      if (JudgeFunction(currentName)) {\n        Json.resetStyle(e.target);\n        Global.MapClickData.length = Global.MapClickData.length - 1;\n      } else {\n        //Get all the data\n        highlightFeature(e);\n        Global.MapClickData[Global.MapClickData.length] = e.target.feature.properties;\n        //All selected results\n        for (let i = 0; i < Global.MapClickData.length; i++) {\n          console.log(Global.MapClickData[i]);\n        }\n      }\n    }\n    this.layerGroups.addLayer(Json);\n\n    //Judge the area is selected or not\n    function JudgeFunction(JsonName) {\n      var state = 0;\n      for (let i = 0; i < Global.MapClickData.length; i++) {\n        if (typeof Global.MapClickData[i].name !== \"undefined\" && Global.MapClickData[i].name === JsonName) {\n          state = 1;\n        }\n      }\n      return state;\n    }\n  }\n\n  //remove the GeoJson\n  RemoveJson() {\n    this.layerGroups.clearLayers();\n  }\n\n  //visualize the region shapefile\n  VisualGeoJson(ResultJsonData, IndexName) {\n    let ResultJson = $L.geoJSON(ResultJsonData, {\n      style: style,\n      onEachFeature: onEachFeature\n    });\n    this.layerGroups.addLayer(ResultJson);\n    //color grading\n    function style(feature) {\n      return {\n        fillColor: getColor(ReturnAttribute(feature, IndexName)),\n        weight: 2,\n        opacity: 1,\n        color: \"white\",\n        dashArray: \"3\",\n        fillOpacity: 0.7\n      };\n    }\n    function ReturnAttribute(feature, indexName) {\n      let Data = 0;\n      for (let i = 0; i < feature.properties.Table.length; i++) {\n        if (feature.properties.Table[i].Name == indexName) {\n          Data = feature.properties.Table[i].NameData;\n        }\n      }\n      return Data;\n    }\n    function getColor(d) {\n      return d > 75 ? \"#90EE90\" : d > 50 ? \"#FFEDA0\" : d > 25 ? \"#FEB24C\" : \"#E31A1C\";\n    }\n    //click to trigger\n    function onEachFeature(feature, layer) {\n      let data = ReturnAttribute(feature, IndexName);\n      let popupContent = feature.properties.name + IndexName + \":\" + data;\n      layer.bindPopup(popupContent);\n    }\n  }\n}","map":{"version":3,"names":["$L","DataShowMap","Global","AnalyzeMap","constructor","args","_defineProperty","FeatureGroup","addTo","map","AddGeoJson","JsonData","myStyle","color","weight","opacity","Json","geoJSON","style","onEachFeature","feature","layer","on","click","ClickFeature","popupContent","properties","ISO_A3","undefined","name","shape1","image","DenOfRiver","Sealed","NonVeUnSe","Water","Snow","Woody","PermanHer","PeriodHer","Reed","bindPopup","highlightFeature","e","target","setStyle","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","currentName","console","log","JudgeFunction","resetStyle","MapClickData","length","i","layerGroups","addLayer","JsonName","state","RemoveJson","clearLayers","VisualGeoJson","ResultJsonData","IndexName","ResultJson","fillColor","getColor","ReturnAttribute","indexName","Data","Table","Name","NameData","d","data"],"sources":["E:/Working/IP_proj/EcociviSystem/ecosys/src/views/EvaluateAnalyze/js/AnalyzeMap.js"],"sourcesContent":["import \"leaflet/dist/leaflet.css\";\r\nimport $L from \"leaflet\";\r\nimport { DataShowMap } from \"../../../utils/map\";\r\nimport Global from \"../views/Globel/Global\";\r\n\r\nexport class AnalyzeMap extends DataShowMap {\r\n  //Add the Austria area data\r\n  layerGroups = new $L.FeatureGroup().addTo(this.map);\r\n\r\n  //Input the Country GeoJson\r\n  AddGeoJson(JsonData) {\r\n    let myStyle = {\r\n      color: \"#49494b\",\r\n      weight: 3,\r\n      opacity: 0.8,\r\n    };\r\n\r\n    var Json = $L.geoJSON(JsonData, {\r\n      style: myStyle,\r\n      onEachFeature: onEachFeature,\r\n    });\r\n\r\n    function onEachFeature(feature, layer) {\r\n      layer.on({\r\n        click: ClickFeature,\r\n      });\r\n      let popupContent;\r\n      if (feature.properties.ISO_A3 !== undefined) {\r\n        popupContent =\r\n          feature.properties.name + \", <br/>\" + feature.properties.ISO_A3 + \".\";\r\n      } else {\r\n        popupContent = \"<b>Name:</b>\" + feature.properties.shape1 + \"<br/>\";\r\n        popupContent +=\r\n          '<img src=\"' +\r\n          feature.properties.image +\r\n          '\" width=\"300\" height=\"200\"><br/>';\r\n        popupContent +=\r\n          \"<b>Density of river:</b>\" +\r\n          feature.properties.DenOfRiver +\r\n          \"m²<br/>\";\r\n        popupContent +=\r\n          \"<b>Area of sealed land:</b>\" + feature.properties.Sealed + \"m²<br/>\";\r\n        popupContent +=\r\n          \"<b>Non-vegetated unsealed surfaces:</b>\" +\r\n          feature.properties.NonVeUnSe +\r\n          \"m²<br/>\";\r\n        popupContent +=\r\n          \"<b>Area of water:</b>\" + feature.properties.Water + \"m²<br/>\";\r\n        popupContent +=\r\n          \"<b>Snow and ice:</b>\" + feature.properties.Snow + \"m²<br/>\";\r\n        popupContent += \"<b>Woody:</b>\" + feature.properties.Woody + \"m²<br/>\";\r\n        popupContent +=\r\n          \"<b>Herbaceous permanent:</b>\" +\r\n          feature.properties.PermanHer +\r\n          \"m²<br/>\";\r\n        popupContent +=\r\n          \"<b>Herbaceous periodically:</b>\" +\r\n          feature.properties.PeriodHer +\r\n          \"m²<br/>\";\r\n        popupContent += \"<b>Reeds:</b>\" + feature.properties.Reed + \"m²<br/>\";\r\n      }\r\n\r\n      layer.bindPopup(popupContent);\r\n    }\r\n\r\n    function highlightFeature(e) {\r\n      var layer = e.target;\r\n\r\n      layer.setStyle({\r\n        weight: 5,\r\n        color: \"#666\",\r\n        dashArray: \"\",\r\n        fillOpacity: 0.7,\r\n      });\r\n\r\n      if (!$L.Browser.ie && !$L.Browser.opera && !$L.Browser.edge) {\r\n        layer.bringToFront();\r\n      }\r\n    }\r\n\r\n    function ClickFeature(e) {\r\n      let currentName = e.target.feature.properties.name;\r\n      console.log(currentName);\r\n      if (JudgeFunction(currentName)) {\r\n        Json.resetStyle(e.target);\r\n        Global.MapClickData.length = Global.MapClickData.length - 1;\r\n      } else {\r\n        //Get all the data\r\n        highlightFeature(e);\r\n        Global.MapClickData[Global.MapClickData.length] =\r\n          e.target.feature.properties;\r\n        //All selected results\r\n        for (let i = 0; i < Global.MapClickData.length; i++) {\r\n          console.log(Global.MapClickData[i]);\r\n        }\r\n      }\r\n    }\r\n    this.layerGroups.addLayer(Json);\r\n\r\n    //Judge the area is selected or not\r\n    function JudgeFunction(JsonName) {\r\n      var state = 0;\r\n      for (let i = 0; i < Global.MapClickData.length; i++) {\r\n        if (\r\n          typeof Global.MapClickData[i].name !== \"undefined\" &&\r\n          Global.MapClickData[i].name === JsonName\r\n        ) {\r\n          state = 1;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  }\r\n\r\n  //remove the GeoJson\r\n  RemoveJson() {\r\n    this.layerGroups.clearLayers();\r\n  }\r\n\r\n  //visualize the region shapefile\r\n  VisualGeoJson(ResultJsonData, IndexName) {\r\n    let ResultJson = $L.geoJSON(ResultJsonData, {\r\n      style: style,\r\n      onEachFeature: onEachFeature,\r\n    });\r\n    this.layerGroups.addLayer(ResultJson);\r\n    //color grading\r\n    function style(feature) {\r\n      return {\r\n        fillColor: getColor(ReturnAttribute(feature, IndexName)),\r\n        weight: 2,\r\n        opacity: 1,\r\n        color: \"white\",\r\n        dashArray: \"3\",\r\n        fillOpacity: 0.7,\r\n      };\r\n    }\r\n    function ReturnAttribute(feature, indexName) {\r\n      let Data = 0;\r\n      for (let i = 0; i < feature.properties.Table.length; i++) {\r\n        if (feature.properties.Table[i].Name == indexName) {\r\n          Data = feature.properties.Table[i].NameData;\r\n        }\r\n      }\r\n      return Data;\r\n    }\r\n    function getColor(d) {\r\n      return d > 75\r\n        ? \"#90EE90\"\r\n        : d > 50\r\n        ? \"#FFEDA0\"\r\n        : d > 25\r\n        ? \"#FEB24C\"\r\n        : \"#E31A1C\";\r\n    }\r\n    //click to trigger\r\n    function onEachFeature(feature, layer) {\r\n      let data = ReturnAttribute(feature, IndexName);\r\n      let popupContent = feature.properties.name + IndexName + \":\" + data;\r\n      layer.bindPopup(popupContent);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}