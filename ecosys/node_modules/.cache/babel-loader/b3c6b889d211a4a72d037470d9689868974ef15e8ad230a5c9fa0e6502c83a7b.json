{"ast":null,"code":"import _defineProperty from \"E:/Working/IP_proj/EcociviSystem/ecosys/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"leaflet/dist/leaflet.css\";\nimport $L from \"leaflet\";\nimport { DataShowMap } from \"../../../utils/map\";\nimport Global from \"../views/Globel/Global\";\nexport class AnalyzeMap extends DataShowMap {\n  constructor(...args) {\n    super(...args);\n    //Add the Austria area data\n    _defineProperty(this, \"layerGroups\", new $L.FeatureGroup().addTo(this.map));\n  }\n  //Input the Country GeoJson\n  AddGeoJson(JsonData) {\n    let myStyle = {\n      color: \"#49494b\",\n      weight: 3,\n      opacity: 0.8\n    };\n    var Json = $L.geoJSON(JsonData, {\n      style: myStyle,\n      onEachFeature: onEachFeature\n    });\n    function onEachFeature(feature, layer) {\n      layer.on({\n        click: ClickFeature\n      });\n    }\n    function resetHighlight(e) {\n      Json.resetStyle(e.target);\n      Global.MapClickName.length = Global.MapClickName.length - 1;\n    }\n    function highlightFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        weight: 5,\n        color: \"#666\",\n        dashArray: \"\",\n        fillOpacity: 0.7\n      });\n      if (!$L.Browser.ie && !$L.Browser.opera && !$L.Browser.edge) {\n        layer.bringToFront();\n      }\n    }\n    function ClickFeature(e) {\n      //get the country's name\n      if (JudgeFunction(e.target.feature.properties.name)) {\n        Json.resetStyle(e.target);\n        Global.MapClickName.length = Global.MapClickName.length - 1;\n      } else {\n        highlightFeature(e);\n        Global.MapClickName[Global.MapClickName.length] = e.target.feature.properties.name;\n        //console.log(Global.MapClickName[Global.MapClickName.length - 1]);\n        //All selected results\n        for (let i = 0; i < Global.MapClickName.length; i++) {\n          console.log(Global.MapClickName[i]);\n        }\n      }\n    }\n    this.layerGroups.addLayer(Json);\n\n    //Judge the country is selected or not\n    function JudgeFunction(JsonName) {\n      var state = 0;\n      for (let i = 0; i < Global.MapClickName.length; i++) {\n        if (Global.MapClickName[i] == JsonName) {\n          state = 1;\n        }\n      }\n      return state;\n    }\n  }\n\n  // //remove the GeoJson\n  // RemoveJson() {\n  //   this.layerGroups.clearLayers();\n  // }\n\n  //可视化图层数据\n  VisualGeoJson(ResultJsonData, IndexName) {\n    let ResultJson = $L.geoJSON(ResultJsonData, {\n      style: style,\n      onEachFeature: onEachFeature\n    });\n    this.layerGroups.addLayer(ResultJson);\n    //分级色彩化\n    function style(feature) {\n      return {\n        fillColor: getColor(ReturnAttribute(feature, IndexName)),\n        weight: 2,\n        opacity: 1,\n        color: \"white\",\n        dashArray: \"3\",\n        fillOpacity: 0.7\n      };\n    }\n    function ReturnAttribute(feature, indexName) {\n      let Data = 0;\n      for (let i = 0; i < feature.properties.Table.length; i++) {\n        if (feature.properties.Table[i].Name == indexName) {\n          Data = feature.properties.Table[i].NameData;\n        }\n      }\n      return Data;\n    }\n    function getColor(d) {\n      return d > 75 ? \"#90EE90\" : d > 50 ? \"#FFEDA0\" : d > 25 ? \"#FEB24C\" : \"#E31A1C\";\n    }\n    //点击触发事件\n    function onEachFeature(feature, layer) {\n      let data = ReturnAttribute(feature, IndexName);\n      let popupContent = feature.properties.name + IndexName + \":\" + data;\n      layer.bindPopup(popupContent);\n    }\n  }\n}","map":{"version":3,"names":["$L","DataShowMap","Global","AnalyzeMap","constructor","args","_defineProperty","FeatureGroup","addTo","map","AddGeoJson","JsonData","myStyle","color","weight","opacity","Json","geoJSON","style","onEachFeature","feature","layer","on","click","ClickFeature","resetHighlight","e","resetStyle","target","MapClickName","length","highlightFeature","setStyle","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","JudgeFunction","properties","name","i","console","log","layerGroups","addLayer","JsonName","state","VisualGeoJson","ResultJsonData","IndexName","ResultJson","fillColor","getColor","ReturnAttribute","indexName","Data","Table","Name","NameData","d","data","popupContent","bindPopup"],"sources":["E:/Working/IP_proj/EcociviSystem/ecosys/src/views/EvaluateAnalyze/js/AnalyzeMap.js"],"sourcesContent":["import \"leaflet/dist/leaflet.css\";\r\nimport $L from \"leaflet\";\r\nimport { DataShowMap } from \"../../../utils/map\";\r\nimport Global from \"../views/Globel/Global\";\r\n\r\nexport class AnalyzeMap extends DataShowMap {\r\n  //Add the Austria area data\r\n  layerGroups = new $L.FeatureGroup().addTo(this.map);\r\n\r\n  //Input the Country GeoJson\r\n  AddGeoJson(JsonData) {\r\n    let myStyle = {\r\n      color: \"#49494b\",\r\n      weight: 3,\r\n      opacity: 0.8,\r\n    };\r\n\r\n    var Json = $L.geoJSON(JsonData, {\r\n      style: myStyle,\r\n      onEachFeature: onEachFeature,\r\n    });\r\n\r\n    function onEachFeature(feature, layer) {\r\n      layer.on({\r\n        click: ClickFeature,\r\n      });\r\n    }\r\n    function resetHighlight(e) {\r\n      Json.resetStyle(e.target);\r\n      Global.MapClickName.length = Global.MapClickName.length - 1;\r\n    }\r\n\r\n    function highlightFeature(e) {\r\n      var layer = e.target;\r\n\r\n      layer.setStyle({\r\n        weight: 5,\r\n        color: \"#666\",\r\n        dashArray: \"\",\r\n        fillOpacity: 0.7,\r\n      });\r\n\r\n      if (!$L.Browser.ie && !$L.Browser.opera && !$L.Browser.edge) {\r\n        layer.bringToFront();\r\n      }\r\n    }\r\n    function ClickFeature(e) {\r\n      //get the country's name\r\n      if (JudgeFunction(e.target.feature.properties.name)) {\r\n        Json.resetStyle(e.target);\r\n        Global.MapClickName.length = Global.MapClickName.length - 1;\r\n      } else {\r\n        highlightFeature(e);\r\n        Global.MapClickName[Global.MapClickName.length] =\r\n          e.target.feature.properties.name;\r\n        //console.log(Global.MapClickName[Global.MapClickName.length - 1]);\r\n        //All selected results\r\n        for (let i = 0; i < Global.MapClickName.length; i++) {\r\n          console.log(Global.MapClickName[i]);\r\n        }\r\n      }\r\n    }\r\n    this.layerGroups.addLayer(Json);\r\n\r\n    //Judge the country is selected or not\r\n    function JudgeFunction(JsonName) {\r\n      var state = 0;\r\n      for (let i = 0; i < Global.MapClickName.length; i++) {\r\n        if (Global.MapClickName[i] == JsonName) {\r\n          state = 1;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  }\r\n\r\n  // //remove the GeoJson\r\n  // RemoveJson() {\r\n  //   this.layerGroups.clearLayers();\r\n  // }\r\n\r\n  //可视化图层数据\r\n  VisualGeoJson(ResultJsonData, IndexName) {\r\n    let ResultJson = $L.geoJSON(ResultJsonData, {\r\n      style: style,\r\n      onEachFeature: onEachFeature,\r\n    });\r\n    this.layerGroups.addLayer(ResultJson);\r\n    //分级色彩化\r\n    function style(feature) {\r\n      return {\r\n        fillColor: getColor(ReturnAttribute(feature, IndexName)),\r\n        weight: 2,\r\n        opacity: 1,\r\n        color: \"white\",\r\n        dashArray: \"3\",\r\n        fillOpacity: 0.7,\r\n      };\r\n    }\r\n    function ReturnAttribute(feature, indexName) {\r\n      let Data = 0;\r\n      for (let i = 0; i < feature.properties.Table.length; i++) {\r\n        if (feature.properties.Table[i].Name == indexName) {\r\n          Data = feature.properties.Table[i].NameData;\r\n        }\r\n      }\r\n      return Data;\r\n    }\r\n    function getColor(d) {\r\n      return d > 75\r\n        ? \"#90EE90\"\r\n        : d > 50\r\n        ? \"#FFEDA0\"\r\n        : d > 25\r\n        ? \"#FEB24C\"\r\n        : \"#E31A1C\";\r\n    }\r\n    //点击触发事件\r\n    function onEachFeature(feature, layer) {\r\n      let data = ReturnAttribute(feature, IndexName);\r\n      let popupContent = feature.properties.name + IndexName + \":\" + data;\r\n      layer.bindPopup(popupContent);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}