{"ast":null,"code":"import _defineProperty from \"E:/Working/IP_proj/EcosystemCivi/ecosys/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"leaflet/dist/leaflet.css\";\nimport $L from \"leaflet\";\nimport { DataShowMap } from \"../../../utils/map\";\nimport Global from \"../views/Globel/Global\";\nimport { CalculateMoran } from \"./optionData\";\nexport class AnalyzeMap extends DataShowMap {\n  constructor(...args) {\n    super(...args);\n    //向图层上添加中国Geojson\n    _defineProperty(this, \"layerGroups\", new $L.FeatureGroup().addTo(this.map));\n  }\n  //添加矢量数据\n  AddGeoJson(JsonData) {\n    let myStyle = {\n      \"color\": \"#49494b\",\n      \"weight\": 3,\n      \"opacity\": 0.8\n    };\n    var Json = $L.geoJSON(JsonData, {\n      style: myStyle,\n      onEachFeature: onEachFeature\n    });\n    function onEachFeature(feature, layer) {\n      layer.on({\n        click: ClickFeature\n      });\n    }\n    // function resetHighlight(e) {\n    //     Json.resetStyle(e.target);\n    //     Global.MapClickName.length=Global.MapClickName.length-1;\n    // }\n\n    function highlightFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        weight: 5,\n        color: '#666',\n        dashArray: '',\n        fillOpacity: 0.7\n      });\n      if (!$L.Browser.ie && !$L.Browser.opera && !$L.Browser.edge) {\n        layer.bringToFront();\n      }\n    }\n    function ClickFeature(e) {\n      if (JudgeFunction(e.target.feature.properties.name)) {\n        Json.resetStyle(e.target);\n        Global.MapClickName.length = Global.MapClickName.length - 1;\n      } else {\n        highlightFeature(e);\n        Global.MapClickName[Global.MapClickName.length] = e.target.feature.properties.name;\n        for (let i = 0; i < Global.MapClickName.length; i++) {\n          console.log(Global.MapClickName[i]);\n        }\n      }\n    }\n    this.layerGroups.addLayer(Json);\n\n    //判断这个Name是否在数组中\n    function JudgeFunction(JsonName) {\n      var state = 0;\n      for (let i = 0; i < Global.MapClickName.length; i++) {\n        if (Global.MapClickName[i] == JsonName) {\n          state = 1;\n        }\n      }\n      return state;\n    }\n  }\n\n  //清除图层\n  RemoveJson() {\n    this.layerGroups.clearLayers();\n  }\n\n  //可视化图层数据\n  VisualGeoJson(ResultJsonData, IndexName) {\n    let ResultJson = $L.geoJSON(ResultJsonData, {\n      style: style,\n      onEachFeature: onEachFeature\n    });\n    this.layerGroups.addLayer(ResultJson);\n    //分级色彩化\n    function style(feature) {\n      return {\n        fillColor: getColor(ReturnAttribute(feature, IndexName)),\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.7\n      };\n    }\n    function ReturnAttribute(feature, indexName) {\n      let Data = 0;\n      for (let i = 0; i < feature.properties.Table.length; i++) {\n        if (feature.properties.Table[i].Name == indexName) {\n          Data = feature.properties.Table[i].NameData;\n        }\n      }\n      return Data;\n    }\n    function getColor(d) {\n      return d > 75 ? '#90EE90' : d > 50 ? '#FFEDA0' : d > 25 ? '#FEB24C' : '#E31A1C';\n    }\n    //点击触发事件\n    function onEachFeature(feature, layer) {\n      let data = ReturnAttribute(feature, IndexName);\n      let popupContent = feature.properties.name + IndexName + \":\" + data;\n      layer.bindPopup(popupContent);\n    }\n  }\n\n  //Moran局部指数计算图层数据\n  MoranGeoJson(ResultJsonData, IndexName) {\n    let MoranJson = $L.geoJSON(ResultJsonData, {\n      style: style,\n      onEachFeature: onEachFeature\n    });\n    this.layerGroups.addLayer(MoranJson);\n    //分级色彩化\n    function style(feature) {\n      return {\n        fillColor: getColor(ReturnAttribute(feature, IndexName)),\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.7\n      };\n    }\n    function ReturnAttribute(feature, indexName) {\n      let Data = 0;\n      for (let i = 0; i < feature.properties.Table.length; i++) {\n        if (feature.properties.Table[i].Name == indexName) {\n          Data = feature.properties.Table[i].NameData;\n        }\n      }\n      return Data;\n    }\n    function getColor(d) {\n      return d > 75 ? '#90EE90' : d > 50 ? '#FFEDA0' : d > 25 ? '#FEB24C' : '#E31A1C';\n    }\n    //点击触发事件\n    function onEachFeature(feature, layer) {\n      let data = CalculateMoran(feature, ResultJsonData, IndexName);\n      let popupContent = feature.properties.name + \"的\" + IndexName + \" \" + data;\n      layer.bindPopup(popupContent);\n    }\n  }\n}","map":{"version":3,"names":["$L","DataShowMap","Global","CalculateMoran","AnalyzeMap","constructor","args","_defineProperty","FeatureGroup","addTo","map","AddGeoJson","JsonData","myStyle","Json","geoJSON","style","onEachFeature","feature","layer","on","click","ClickFeature","highlightFeature","e","target","setStyle","weight","color","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","JudgeFunction","properties","name","resetStyle","MapClickName","length","i","console","log","layerGroups","addLayer","JsonName","state","RemoveJson","clearLayers","VisualGeoJson","ResultJsonData","IndexName","ResultJson","fillColor","getColor","ReturnAttribute","opacity","indexName","Data","Table","Name","NameData","d","data","popupContent","bindPopup","MoranGeoJson","MoranJson"],"sources":["E:/Working/IP_proj/EcosystemCivi/ecosys/src/views/EvaluateAnalyze/js/AnalyzeMap.js"],"sourcesContent":["import \"leaflet/dist/leaflet.css\"\r\nimport $L from \"leaflet\";\r\nimport {DataShowMap} from \"../../../utils/map\";\r\nimport Global from \"../views/Globel/Global\";\r\nimport {CalculateMoran} from \"./optionData\";\r\n\r\n\r\nexport class AnalyzeMap extends DataShowMap {\r\n    //向图层上添加中国Geojson\r\n\r\n\r\n\r\n    layerGroups = new $L.FeatureGroup().addTo(this.map);\r\n\r\n\r\n\r\n    //添加矢量数据\r\n    AddGeoJson(JsonData) {\r\n        let myStyle = {\r\n            \"color\": \"#49494b\",\r\n            \"weight\": 3,\r\n            \"opacity\": 0.8,\r\n        };\r\n\r\n        var Json=$L.geoJSON(JsonData, {\r\n            style: myStyle,\r\n            onEachFeature:onEachFeature,\r\n\r\n        })\r\n\r\n        function onEachFeature(feature, layer) {\r\n            layer.on({\r\n                click: ClickFeature,\r\n            });\r\n        }\r\n        // function resetHighlight(e) {\r\n        //     Json.resetStyle(e.target);\r\n        //     Global.MapClickName.length=Global.MapClickName.length-1;\r\n        // }\r\n\r\n        function highlightFeature(e) {\r\n            var layer = e.target;\r\n\r\n            layer.setStyle({\r\n                weight: 5,\r\n                color: '#666',\r\n                dashArray: '',\r\n                fillOpacity: 0.7\r\n            });\r\n\r\n            if (!$L.Browser.ie && !$L.Browser.opera && !$L.Browser.edge) {\r\n                layer.bringToFront();\r\n\r\n            }\r\n        }\r\n        function ClickFeature(e) {\r\n            if(JudgeFunction(e.target.feature.properties.name)){\r\n                Json.resetStyle(e.target);\r\n                Global.MapClickName.length=Global.MapClickName.length-1;\r\n            }else{\r\n                highlightFeature(e)\r\n                Global.MapClickName[Global.MapClickName.length]=e.target.feature.properties.name;\r\n                for(let i=0;i<Global.MapClickName.length;i++){\r\n                    console.log(Global.MapClickName[i]);\r\n                }\r\n            }\r\n        }\r\n        this.layerGroups.addLayer(Json);\r\n\r\n        //判断这个Name是否在数组中\r\n        function JudgeFunction(JsonName){\r\n            var state=0;\r\n            for(let i=0;i<Global.MapClickName.length;i++){\r\n                if(Global.MapClickName[i]==JsonName){\r\n                    state=1;\r\n                }\r\n            }\r\n            return state;\r\n        }\r\n    }\r\n\r\n    //清除图层\r\n    RemoveJson(){\r\n        this.layerGroups.clearLayers();\r\n    }\r\n\r\n    //可视化图层数据\r\n    VisualGeoJson(ResultJsonData,IndexName){\r\n        let ResultJson=$L.geoJSON(ResultJsonData, {\r\n            style: style,\r\n            onEachFeature:onEachFeature,\r\n        })\r\n        this.layerGroups.addLayer(ResultJson);\r\n        //分级色彩化\r\n        function style(feature) {\r\n            return {\r\n                fillColor: getColor(ReturnAttribute(feature,IndexName)),\r\n                weight: 2,\r\n                opacity: 1,\r\n                color: 'white',\r\n                dashArray: '3',\r\n                fillOpacity: 0.7\r\n            };\r\n        }\r\n        function ReturnAttribute(feature,indexName){\r\n            let Data=0;\r\n            for (let i=0;i<feature.properties.Table.length;i++){\r\n                if(feature.properties.Table[i].Name==indexName){\r\n                   Data=feature.properties.Table[i].NameData;\r\n                }\r\n            }\r\n            return Data;\r\n        }\r\n        function getColor(d) {\r\n            return     d > 75  ? '#90EE90' :\r\n                            d > 50   ? '#FFEDA0' :\r\n                                d > 25   ? '#FEB24C' :\r\n                                    '#E31A1C';\r\n        }\r\n        //点击触发事件\r\n        function onEachFeature(feature,layer) {\r\n            let data=ReturnAttribute(feature,IndexName);\r\n            let popupContent=feature.properties.name+IndexName+\":\"+data;\r\n            layer.bindPopup(popupContent);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //Moran局部指数计算图层数据\r\n    MoranGeoJson(ResultJsonData,IndexName){\r\n        let MoranJson=$L.geoJSON(ResultJsonData, {\r\n            style: style,\r\n            onEachFeature:onEachFeature,\r\n        })\r\n        this.layerGroups.addLayer(MoranJson);\r\n        //分级色彩化\r\n        function style(feature) {\r\n            return {\r\n                fillColor: getColor(ReturnAttribute(feature,IndexName)),\r\n                weight: 2,\r\n                opacity: 1,\r\n                color: 'white',\r\n                dashArray: '3',\r\n                fillOpacity: 0.7\r\n            };\r\n        }\r\n        function ReturnAttribute(feature,indexName){\r\n            let Data=0;\r\n            for (let i=0;i<feature.properties.Table.length;i++){\r\n                if(feature.properties.Table[i].Name==indexName){\r\n                    Data=feature.properties.Table[i].NameData;\r\n                }\r\n            }\r\n            return Data;\r\n        }\r\n        function getColor(d) {\r\n            return     d > 75  ? '#90EE90' :\r\n                d > 50   ? '#FFEDA0' :\r\n                    d > 25   ? '#FEB24C' :\r\n                        '#E31A1C';\r\n        }\r\n        //点击触发事件\r\n        function onEachFeature(feature,layer) {\r\n            let data=CalculateMoran(feature,ResultJsonData,IndexName);\r\n            let popupContent=feature.properties.name+\"的\"+IndexName+\" \"+data;\r\n            layer.bindPopup(popupContent);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}