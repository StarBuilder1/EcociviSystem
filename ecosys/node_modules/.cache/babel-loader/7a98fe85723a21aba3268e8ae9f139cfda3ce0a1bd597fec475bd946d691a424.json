{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { latLng, latLngBounds, LatLng, LatLngBounds, Util, DomUtil, GeoJSON } from 'leaflet';\nimport { request, warn } from './Request';\nimport { options } from './Options';\nimport { Support } from './Support';\nimport { geojsonToArcGIS as g2a, arcgisToGeoJSON as a2g } from '@terraformer/arcgis';\nvar POWERED_BY_ESRI_ATTRIBUTION_STRING = 'Powered by <a href=\"https://www.esri.com\">Esri</a>';\nexport function geojsonToArcGIS(geojson, idAttr) {\n  return g2a(geojson, idAttr);\n}\nexport function arcgisToGeoJSON(arcgis, idAttr) {\n  return a2g(arcgis, idAttr);\n}\n\n// convert an extent (ArcGIS) to LatLngBounds (Leaflet)\nexport function extentToBounds(extent) {\n  // \"NaN\" coordinates from ArcGIS Server indicate a null geometry\n  if (extent.xmin !== 'NaN' && extent.ymin !== 'NaN' && extent.xmax !== 'NaN' && extent.ymax !== 'NaN') {\n    var sw = latLng(extent.ymin, extent.xmin);\n    var ne = latLng(extent.ymax, extent.xmax);\n    return latLngBounds(sw, ne);\n  } else {\n    return null;\n  }\n}\n\n// convert an LatLngBounds (Leaflet) to extent (ArcGIS)\nexport function boundsToExtent(bounds) {\n  bounds = latLngBounds(bounds);\n  return {\n    xmin: bounds.getSouthWest().lng,\n    ymin: bounds.getSouthWest().lat,\n    xmax: bounds.getNorthEast().lng,\n    ymax: bounds.getNorthEast().lat,\n    spatialReference: {\n      wkid: 4326\n    }\n  };\n}\nvar knownFieldNames = /^(OBJECTID|FID|OID|ID)$/i;\n\n// Attempts to find the ID Field from response\nexport function _findIdAttributeFromResponse(response) {\n  var result;\n  if (response.objectIdFieldName) {\n    // Find Id Field directly\n    result = response.objectIdFieldName;\n  } else if (response.fields) {\n    // Find ID Field based on field type\n    for (var j = 0; j <= response.fields.length - 1; j++) {\n      if (response.fields[j].type === 'esriFieldTypeOID') {\n        result = response.fields[j].name;\n        break;\n      }\n    }\n    if (!result) {\n      // If no field was marked as being the esriFieldTypeOID try well known field names\n      for (j = 0; j <= response.fields.length - 1; j++) {\n        if (response.fields[j].name.match(knownFieldNames)) {\n          result = response.fields[j].name;\n          break;\n        }\n      }\n    }\n  }\n  return result;\n}\n\n// This is the 'last' resort, find the Id field from the specified feature\nexport function _findIdAttributeFromFeature(feature) {\n  for (var key in feature.attributes) {\n    if (key.match(knownFieldNames)) {\n      return key;\n    }\n  }\n}\nexport function responseToFeatureCollection(response, idAttribute) {\n  var objectIdField;\n  var features = response.features || response.results;\n  var count = features && features.length;\n  if (idAttribute) {\n    objectIdField = idAttribute;\n  } else {\n    objectIdField = _findIdAttributeFromResponse(response);\n  }\n  var featureCollection = {\n    type: 'FeatureCollection',\n    features: []\n  };\n  if (count) {\n    for (var i = features.length - 1; i >= 0; i--) {\n      var feature = arcgisToGeoJSON(features[i], objectIdField || _findIdAttributeFromFeature(features[i]));\n      featureCollection.features.push(feature);\n    }\n  }\n  return featureCollection;\n}\n\n// trim url whitespace and add a trailing slash if needed\nexport function cleanUrl(url) {\n  // trim leading and trailing spaces, but not spaces inside the url\n  url = Util.trim(url);\n\n  // add a trailing slash to the url if the user omitted it\n  if (url[url.length - 1] !== '/') {\n    url += '/';\n  }\n  return url;\n}\n\n/* Extract url params if any and store them in requestParams attribute.\r\n   Return the options params updated */\nexport function getUrlParams(options) {\n  if (options.url.indexOf('?') !== -1) {\n    options.requestParams = options.requestParams || {};\n    var queryString = options.url.substring(options.url.indexOf('?') + 1);\n    options.url = options.url.split('?')[0];\n    options.requestParams = JSON.parse('{\"' + decodeURI(queryString).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n  }\n  options.url = cleanUrl(options.url.split('?')[0]);\n  return options;\n}\nexport function isArcgisOnline(url) {\n  /* hosted feature services support geojson as an output format\r\n  utility.arcgis.com services are proxied from a variety of ArcGIS Server vintages, and may not */\n  return /^(?!.*utility\\.arcgis\\.com).*\\.arcgis\\.com.*FeatureServer/i.test(url);\n}\nexport function geojsonTypeToArcGIS(geoJsonType) {\n  var arcgisGeometryType;\n  switch (geoJsonType) {\n    case 'Point':\n      arcgisGeometryType = 'esriGeometryPoint';\n      break;\n    case 'MultiPoint':\n      arcgisGeometryType = 'esriGeometryMultipoint';\n      break;\n    case 'LineString':\n      arcgisGeometryType = 'esriGeometryPolyline';\n      break;\n    case 'MultiLineString':\n      arcgisGeometryType = 'esriGeometryPolyline';\n      break;\n    case 'Polygon':\n      arcgisGeometryType = 'esriGeometryPolygon';\n      break;\n    case 'MultiPolygon':\n      arcgisGeometryType = 'esriGeometryPolygon';\n      break;\n  }\n  return arcgisGeometryType;\n}\nexport function calcAttributionWidth(map) {\n  // either crop at 55px or user defined buffer\n  return map.getSize().x - options.attributionWidthOffset + 'px';\n}\nexport function setEsriAttribution(map) {\n  if (!map.attributionControl) {\n    return;\n  }\n  if (!map.attributionControl._esriAttributionLayerCount) {\n    map.attributionControl._esriAttributionLayerCount = 0;\n  }\n  if (map.attributionControl._esriAttributionLayerCount === 0) {\n    // Dynamically creating the CSS rules, only run this once per page load:\n    if (!map.attributionControl._esriAttributionAddedOnce) {\n      var hoverAttributionStyle = document.createElement('style');\n      hoverAttributionStyle.type = 'text/css';\n      hoverAttributionStyle.innerHTML = '.esri-truncated-attribution:hover {' + 'white-space: normal;' + '}';\n      document.getElementsByTagName('head')[0].appendChild(hoverAttributionStyle);\n\n      // define a new css class in JS to trim attribution into a single line\n      var attributionStyle = document.createElement('style');\n      attributionStyle.type = 'text/css';\n      attributionStyle.innerHTML = '.esri-truncated-attribution {' + 'vertical-align: -3px;' + 'white-space: nowrap;' + 'overflow: hidden;' + 'text-overflow: ellipsis;' + 'display: inline-block;' + 'transition: 0s white-space;' + 'transition-delay: 1s;' + 'max-width: ' + calcAttributionWidth(map) + ';' + '}';\n      document.getElementsByTagName('head')[0].appendChild(attributionStyle);\n\n      // update the width used to truncate when the map itself is resized\n      map.on('resize', function (e) {\n        if (map.attributionControl) {\n          map.attributionControl._container.style.maxWidth = calcAttributionWidth(e.target);\n        }\n      });\n      map.attributionControl._esriAttributionAddedOnce = true;\n    }\n    DomUtil.addClass(map.attributionControl._container, 'esri-truncated-attribution:hover');\n    DomUtil.addClass(map.attributionControl._container, 'esri-truncated-attribution');\n  }\n\n  // Track the number of esri-leaflet layers that are on the map so we can know when we can remove the attribution (below in removeEsriAttribution)\n  map.attributionControl._esriAttributionLayerCount = map.attributionControl._esriAttributionLayerCount + 1;\n}\nexport function removeEsriAttribution(map) {\n  if (!map.attributionControl) {\n    return;\n  }\n\n  // Only remove the attribution if we're about to remove the LAST esri-leaflet layer (_esriAttributionLayerCount)\n  if (map.attributionControl._esriAttributionLayerCount && map.attributionControl._esriAttributionLayerCount === 1) {\n    DomUtil.removeClass(map.attributionControl._container, 'esri-truncated-attribution:hover');\n    DomUtil.removeClass(map.attributionControl._container, 'esri-truncated-attribution');\n  }\n  map.attributionControl._esriAttributionLayerCount = map.attributionControl._esriAttributionLayerCount - 1;\n}\nexport function _setGeometry(geometry) {\n  var params = {\n    geometry: null,\n    geometryType: null\n  };\n\n  // convert bounds to extent and finish\n  if (geometry instanceof LatLngBounds) {\n    // set geometry + geometryType\n    params.geometry = boundsToExtent(geometry);\n    params.geometryType = 'esriGeometryEnvelope';\n    return params;\n  }\n\n  // convert L.Marker > L.LatLng\n  if (geometry.getLatLng) {\n    geometry = geometry.getLatLng();\n  }\n\n  // convert L.LatLng to a geojson point and continue;\n  if (geometry instanceof LatLng) {\n    geometry = {\n      type: 'Point',\n      coordinates: [geometry.lng, geometry.lat]\n    };\n  }\n\n  // handle L.GeoJSON, pull out the first geometry\n  if (geometry instanceof GeoJSON) {\n    // reassign geometry to the GeoJSON value  (we are assuming that only one feature is present)\n    geometry = geometry.getLayers()[0].feature.geometry;\n    params.geometry = geojsonToArcGIS(geometry);\n    params.geometryType = geojsonTypeToArcGIS(geometry.type);\n  }\n\n  // Handle L.Polyline and L.Polygon\n  if (geometry.toGeoJSON) {\n    geometry = geometry.toGeoJSON();\n  }\n\n  // handle GeoJSON feature by pulling out the geometry\n  if (geometry.type === 'Feature') {\n    // get the geometry of the geojson feature\n    geometry = geometry.geometry;\n  }\n\n  // confirm that our GeoJSON is a point, line or polygon\n  if (geometry.type === 'Point' || geometry.type === 'LineString' || geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n    params.geometry = geojsonToArcGIS(geometry);\n    params.geometryType = geojsonTypeToArcGIS(geometry.type);\n    return params;\n  }\n\n  // warn the user if we havn't found an appropriate object\n  warn('invalid geometry passed to spatial query. Should be L.LatLng, L.LatLngBounds, L.Marker or a GeoJSON Point, Line, Polygon or MultiPolygon object');\n}\nexport function _getAttributionData(url, map) {\n  if (Support.cors) {\n    request(url, {}, Util.bind(function (error, attributions) {\n      if (error) {\n        return;\n      }\n      map._esriAttributions = [];\n      for (var c = 0; c < attributions.contributors.length; c++) {\n        var contributor = attributions.contributors[c];\n        for (var i = 0; i < contributor.coverageAreas.length; i++) {\n          var coverageArea = contributor.coverageAreas[i];\n          var southWest = latLng(coverageArea.bbox[0], coverageArea.bbox[1]);\n          var northEast = latLng(coverageArea.bbox[2], coverageArea.bbox[3]);\n          map._esriAttributions.push({\n            attribution: contributor.attribution,\n            score: coverageArea.score,\n            bounds: latLngBounds(southWest, northEast),\n            minZoom: coverageArea.zoomMin,\n            maxZoom: coverageArea.zoomMax\n          });\n        }\n      }\n      map._esriAttributions.sort(function (a, b) {\n        return b.score - a.score;\n      });\n\n      // pass the same argument as the map's 'moveend' event\n      var obj = {\n        target: map\n      };\n      _updateMapAttribution(obj);\n    }, this));\n  }\n}\nexport function _updateMapAttribution(evt) {\n  var map = evt.target;\n  var oldAttributions = map._esriAttributions;\n  if (!map || !map.attributionControl) return;\n  var attributionElement = map.attributionControl._container.querySelector('.esri-dynamic-attribution');\n  if (attributionElement && oldAttributions) {\n    var newAttributions = '';\n    var bounds = map.getBounds();\n    var wrappedBounds = latLngBounds(bounds.getSouthWest().wrap(), bounds.getNorthEast().wrap());\n    var zoom = map.getZoom();\n    for (var i = 0; i < oldAttributions.length; i++) {\n      var attribution = oldAttributions[i];\n      var text = attribution.attribution;\n      if (!newAttributions.match(text) && attribution.bounds.intersects(wrappedBounds) && zoom >= attribution.minZoom && zoom <= attribution.maxZoom) {\n        newAttributions += ', ' + text;\n      }\n    }\n    newAttributions = POWERED_BY_ESRI_ATTRIBUTION_STRING + ' | ' + newAttributions.substr(2);\n    attributionElement.innerHTML = newAttributions;\n    attributionElement.style.maxWidth = calcAttributionWidth(map);\n    map.fire('attributionupdated', {\n      attribution: newAttributions\n    });\n  }\n}\n\n// for backwards compatibility\nexport { warn };\nexport var EsriUtil = {\n  warn: warn,\n  cleanUrl: cleanUrl,\n  getUrlParams: getUrlParams,\n  isArcgisOnline: isArcgisOnline,\n  geojsonTypeToArcGIS: geojsonTypeToArcGIS,\n  responseToFeatureCollection: responseToFeatureCollection,\n  geojsonToArcGIS: geojsonToArcGIS,\n  arcgisToGeoJSON: arcgisToGeoJSON,\n  boundsToExtent: boundsToExtent,\n  extentToBounds: extentToBounds,\n  calcAttributionWidth: calcAttributionWidth,\n  setEsriAttribution: setEsriAttribution,\n  removeEsriAttribution: removeEsriAttribution,\n  _setGeometry: _setGeometry,\n  _getAttributionData: _getAttributionData,\n  _updateMapAttribution: _updateMapAttribution,\n  _findIdAttributeFromFeature: _findIdAttributeFromFeature,\n  _findIdAttributeFromResponse: _findIdAttributeFromResponse\n};\nexport default EsriUtil;","map":{"version":3,"names":["latLng","latLngBounds","LatLng","LatLngBounds","Util","DomUtil","GeoJSON","request","warn","options","Support","geojsonToArcGIS","g2a","arcgisToGeoJSON","a2g","POWERED_BY_ESRI_ATTRIBUTION_STRING","geojson","idAttr","arcgis","extentToBounds","extent","xmin","ymin","xmax","ymax","sw","ne","boundsToExtent","bounds","getSouthWest","lng","lat","getNorthEast","spatialReference","wkid","knownFieldNames","_findIdAttributeFromResponse","response","result","objectIdFieldName","fields","j","length","type","name","match","_findIdAttributeFromFeature","feature","key","attributes","responseToFeatureCollection","idAttribute","objectIdField","features","results","count","featureCollection","i","push","cleanUrl","url","trim","getUrlParams","indexOf","requestParams","queryString","substring","split","JSON","parse","decodeURI","replace","isArcgisOnline","test","geojsonTypeToArcGIS","geoJsonType","arcgisGeometryType","calcAttributionWidth","map","getSize","x","attributionWidthOffset","setEsriAttribution","attributionControl","_esriAttributionLayerCount","_esriAttributionAddedOnce","hoverAttributionStyle","document","createElement","innerHTML","getElementsByTagName","appendChild","attributionStyle","on","e","_container","style","maxWidth","target","addClass","removeEsriAttribution","removeClass","_setGeometry","geometry","params","geometryType","getLatLng","coordinates","getLayers","toGeoJSON","_getAttributionData","cors","bind","error","attributions","_esriAttributions","c","contributors","contributor","coverageAreas","coverageArea","southWest","bbox","northEast","attribution","score","minZoom","zoomMin","maxZoom","zoomMax","sort","a","b","obj","_updateMapAttribution","evt","oldAttributions","attributionElement","querySelector","newAttributions","getBounds","wrappedBounds","wrap","zoom","getZoom","text","intersects","substr","fire","EsriUtil"],"sources":["E:/Working/IP_proj/EcosystemCivi/ecosys/node_modules/esri-leaflet/src/Util.js"],"sourcesContent":["import { latLng, latLngBounds, LatLng, LatLngBounds, Util, DomUtil, GeoJSON } from 'leaflet';\r\nimport { request, warn } from './Request';\r\nimport { options } from './Options';\r\nimport { Support } from './Support';\r\n\r\nimport {\r\n  geojsonToArcGIS as g2a,\r\n  arcgisToGeoJSON as a2g\r\n} from '@terraformer/arcgis';\r\n\r\nvar POWERED_BY_ESRI_ATTRIBUTION_STRING = 'Powered by <a href=\"https://www.esri.com\">Esri</a>';\r\n\r\nexport function geojsonToArcGIS (geojson, idAttr) {\r\n  return g2a(geojson, idAttr);\r\n}\r\n\r\nexport function arcgisToGeoJSON (arcgis, idAttr) {\r\n  return a2g(arcgis, idAttr);\r\n}\r\n\r\n// convert an extent (ArcGIS) to LatLngBounds (Leaflet)\r\nexport function extentToBounds (extent) {\r\n  // \"NaN\" coordinates from ArcGIS Server indicate a null geometry\r\n  if (extent.xmin !== 'NaN' && extent.ymin !== 'NaN' && extent.xmax !== 'NaN' && extent.ymax !== 'NaN') {\r\n    var sw = latLng(extent.ymin, extent.xmin);\r\n    var ne = latLng(extent.ymax, extent.xmax);\r\n    return latLngBounds(sw, ne);\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n// convert an LatLngBounds (Leaflet) to extent (ArcGIS)\r\nexport function boundsToExtent (bounds) {\r\n  bounds = latLngBounds(bounds);\r\n  return {\r\n    xmin: bounds.getSouthWest().lng,\r\n    ymin: bounds.getSouthWest().lat,\r\n    xmax: bounds.getNorthEast().lng,\r\n    ymax: bounds.getNorthEast().lat,\r\n    spatialReference: {\r\n      wkid: 4326\r\n    }\r\n  };\r\n}\r\n\r\nvar knownFieldNames = /^(OBJECTID|FID|OID|ID)$/i;\r\n\r\n// Attempts to find the ID Field from response\r\nexport function _findIdAttributeFromResponse (response) {\r\n  var result;\r\n\r\n  if (response.objectIdFieldName) {\r\n    // Find Id Field directly\r\n    result = response.objectIdFieldName;\r\n  } else if (response.fields) {\r\n    // Find ID Field based on field type\r\n    for (var j = 0; j <= response.fields.length - 1; j++) {\r\n      if (response.fields[j].type === 'esriFieldTypeOID') {\r\n        result = response.fields[j].name;\r\n        break;\r\n      }\r\n    }\r\n    if (!result) {\r\n      // If no field was marked as being the esriFieldTypeOID try well known field names\r\n      for (j = 0; j <= response.fields.length - 1; j++) {\r\n        if (response.fields[j].name.match(knownFieldNames)) {\r\n          result = response.fields[j].name;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n// This is the 'last' resort, find the Id field from the specified feature\r\nexport function _findIdAttributeFromFeature (feature) {\r\n  for (var key in feature.attributes) {\r\n    if (key.match(knownFieldNames)) {\r\n      return key;\r\n    }\r\n  }\r\n}\r\n\r\nexport function responseToFeatureCollection (response, idAttribute) {\r\n  var objectIdField;\r\n  var features = response.features || response.results;\r\n  var count = features && features.length;\r\n\r\n  if (idAttribute) {\r\n    objectIdField = idAttribute;\r\n  } else {\r\n    objectIdField = _findIdAttributeFromResponse(response);\r\n  }\r\n\r\n  var featureCollection = {\r\n    type: 'FeatureCollection',\r\n    features: []\r\n  };\r\n\r\n  if (count) {\r\n    for (var i = features.length - 1; i >= 0; i--) {\r\n      var feature = arcgisToGeoJSON(features[i], objectIdField || _findIdAttributeFromFeature(features[i]));\r\n      featureCollection.features.push(feature);\r\n    }\r\n  }\r\n\r\n  return featureCollection;\r\n}\r\n\r\n// trim url whitespace and add a trailing slash if needed\r\nexport function cleanUrl (url) {\r\n  // trim leading and trailing spaces, but not spaces inside the url\r\n  url = Util.trim(url);\r\n\r\n  // add a trailing slash to the url if the user omitted it\r\n  if (url[url.length - 1] !== '/') {\r\n    url += '/';\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\n/* Extract url params if any and store them in requestParams attribute.\r\n   Return the options params updated */\r\nexport function getUrlParams (options) {\r\n  if (options.url.indexOf('?') !== -1) {\r\n    options.requestParams = options.requestParams || {};\r\n    var queryString = options.url.substring(options.url.indexOf('?') + 1);\r\n    options.url = options.url.split('?')[0];\r\n    options.requestParams = JSON.parse('{\"' + decodeURI(queryString).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\r\n  }\r\n  options.url = cleanUrl(options.url.split('?')[0]);\r\n  return options;\r\n}\r\n\r\nexport function isArcgisOnline (url) {\r\n  /* hosted feature services support geojson as an output format\r\n  utility.arcgis.com services are proxied from a variety of ArcGIS Server vintages, and may not */\r\n  return (/^(?!.*utility\\.arcgis\\.com).*\\.arcgis\\.com.*FeatureServer/i).test(url);\r\n}\r\n\r\nexport function geojsonTypeToArcGIS (geoJsonType) {\r\n  var arcgisGeometryType;\r\n  switch (geoJsonType) {\r\n    case 'Point':\r\n      arcgisGeometryType = 'esriGeometryPoint';\r\n      break;\r\n    case 'MultiPoint':\r\n      arcgisGeometryType = 'esriGeometryMultipoint';\r\n      break;\r\n    case 'LineString':\r\n      arcgisGeometryType = 'esriGeometryPolyline';\r\n      break;\r\n    case 'MultiLineString':\r\n      arcgisGeometryType = 'esriGeometryPolyline';\r\n      break;\r\n    case 'Polygon':\r\n      arcgisGeometryType = 'esriGeometryPolygon';\r\n      break;\r\n    case 'MultiPolygon':\r\n      arcgisGeometryType = 'esriGeometryPolygon';\r\n      break;\r\n  }\r\n\r\n  return arcgisGeometryType;\r\n}\r\n\r\nexport function calcAttributionWidth (map) {\r\n  // either crop at 55px or user defined buffer\r\n  return (map.getSize().x - options.attributionWidthOffset) + 'px';\r\n}\r\n\r\nexport function setEsriAttribution (map) {\r\n  if (!map.attributionControl) {\r\n    return;\r\n  }\r\n\r\n  if (!map.attributionControl._esriAttributionLayerCount) {\r\n    map.attributionControl._esriAttributionLayerCount = 0;\r\n  }\r\n\r\n  if (map.attributionControl._esriAttributionLayerCount === 0) {\r\n    // Dynamically creating the CSS rules, only run this once per page load:\r\n    if (!map.attributionControl._esriAttributionAddedOnce) {\r\n      var hoverAttributionStyle = document.createElement('style');\r\n      hoverAttributionStyle.type = 'text/css';\r\n      hoverAttributionStyle.innerHTML = '.esri-truncated-attribution:hover {' +\r\n        'white-space: normal;' +\r\n      '}';\r\n      document.getElementsByTagName('head')[0].appendChild(hoverAttributionStyle);\r\n\r\n      // define a new css class in JS to trim attribution into a single line\r\n      var attributionStyle = document.createElement('style');\r\n      attributionStyle.type = 'text/css';\r\n      attributionStyle.innerHTML = '.esri-truncated-attribution {' +\r\n        'vertical-align: -3px;' +\r\n        'white-space: nowrap;' +\r\n        'overflow: hidden;' +\r\n        'text-overflow: ellipsis;' +\r\n        'display: inline-block;' +\r\n        'transition: 0s white-space;' +\r\n        'transition-delay: 1s;' +\r\n        'max-width: ' + calcAttributionWidth(map) + ';' +\r\n      '}';\r\n      document.getElementsByTagName('head')[0].appendChild(attributionStyle);\r\n\r\n      // update the width used to truncate when the map itself is resized\r\n      map.on('resize', function (e) {\r\n        if (map.attributionControl) {\r\n          map.attributionControl._container.style.maxWidth = calcAttributionWidth(e.target);\r\n        }\r\n      });\r\n\r\n      map.attributionControl._esriAttributionAddedOnce = true;\r\n    }\r\n\r\n    DomUtil.addClass(map.attributionControl._container, 'esri-truncated-attribution:hover');\r\n    DomUtil.addClass(map.attributionControl._container, 'esri-truncated-attribution');\r\n  }\r\n\r\n  // Track the number of esri-leaflet layers that are on the map so we can know when we can remove the attribution (below in removeEsriAttribution)\r\n  map.attributionControl._esriAttributionLayerCount = map.attributionControl._esriAttributionLayerCount + 1;\r\n}\r\n\r\nexport function removeEsriAttribution (map) {\r\n  if (!map.attributionControl) {\r\n    return;\r\n  }\r\n\r\n  // Only remove the attribution if we're about to remove the LAST esri-leaflet layer (_esriAttributionLayerCount)\r\n  if (map.attributionControl._esriAttributionLayerCount && map.attributionControl._esriAttributionLayerCount === 1) {\r\n    DomUtil.removeClass(map.attributionControl._container, 'esri-truncated-attribution:hover');\r\n    DomUtil.removeClass(map.attributionControl._container, 'esri-truncated-attribution');\r\n  }\r\n  map.attributionControl._esriAttributionLayerCount = map.attributionControl._esriAttributionLayerCount - 1;\r\n}\r\n\r\nexport function _setGeometry (geometry) {\r\n  var params = {\r\n    geometry: null,\r\n    geometryType: null\r\n  };\r\n\r\n  // convert bounds to extent and finish\r\n  if (geometry instanceof LatLngBounds) {\r\n    // set geometry + geometryType\r\n    params.geometry = boundsToExtent(geometry);\r\n    params.geometryType = 'esriGeometryEnvelope';\r\n    return params;\r\n  }\r\n\r\n  // convert L.Marker > L.LatLng\r\n  if (geometry.getLatLng) {\r\n    geometry = geometry.getLatLng();\r\n  }\r\n\r\n  // convert L.LatLng to a geojson point and continue;\r\n  if (geometry instanceof LatLng) {\r\n    geometry = {\r\n      type: 'Point',\r\n      coordinates: [geometry.lng, geometry.lat]\r\n    };\r\n  }\r\n\r\n  // handle L.GeoJSON, pull out the first geometry\r\n  if (geometry instanceof GeoJSON) {\r\n    // reassign geometry to the GeoJSON value  (we are assuming that only one feature is present)\r\n    geometry = geometry.getLayers()[0].feature.geometry;\r\n    params.geometry = geojsonToArcGIS(geometry);\r\n    params.geometryType = geojsonTypeToArcGIS(geometry.type);\r\n  }\r\n\r\n  // Handle L.Polyline and L.Polygon\r\n  if (geometry.toGeoJSON) {\r\n    geometry = geometry.toGeoJSON();\r\n  }\r\n\r\n  // handle GeoJSON feature by pulling out the geometry\r\n  if (geometry.type === 'Feature') {\r\n    // get the geometry of the geojson feature\r\n    geometry = geometry.geometry;\r\n  }\r\n\r\n  // confirm that our GeoJSON is a point, line or polygon\r\n  if (geometry.type === 'Point' || geometry.type === 'LineString' || geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\r\n    params.geometry = geojsonToArcGIS(geometry);\r\n    params.geometryType = geojsonTypeToArcGIS(geometry.type);\r\n    return params;\r\n  }\r\n\r\n  // warn the user if we havn't found an appropriate object\r\n  warn('invalid geometry passed to spatial query. Should be L.LatLng, L.LatLngBounds, L.Marker or a GeoJSON Point, Line, Polygon or MultiPolygon object');\r\n}\r\n\r\nexport function _getAttributionData (url, map) {\r\n  if (Support.cors) {\r\n    request(url, {}, Util.bind(function (error, attributions) {\r\n      if (error) { return; }\r\n      map._esriAttributions = [];\r\n      for (var c = 0; c < attributions.contributors.length; c++) {\r\n        var contributor = attributions.contributors[c];\r\n\r\n        for (var i = 0; i < contributor.coverageAreas.length; i++) {\r\n          var coverageArea = contributor.coverageAreas[i];\r\n          var southWest = latLng(coverageArea.bbox[0], coverageArea.bbox[1]);\r\n          var northEast = latLng(coverageArea.bbox[2], coverageArea.bbox[3]);\r\n          map._esriAttributions.push({\r\n            attribution: contributor.attribution,\r\n            score: coverageArea.score,\r\n            bounds: latLngBounds(southWest, northEast),\r\n            minZoom: coverageArea.zoomMin,\r\n            maxZoom: coverageArea.zoomMax\r\n          });\r\n        }\r\n      }\r\n\r\n      map._esriAttributions.sort(function (a, b) {\r\n        return b.score - a.score;\r\n      });\r\n\r\n      // pass the same argument as the map's 'moveend' event\r\n      var obj = { target: map };\r\n      _updateMapAttribution(obj);\r\n    }, this));\r\n  }\r\n}\r\n\r\nexport function _updateMapAttribution (evt) {\r\n  var map = evt.target;\r\n  var oldAttributions = map._esriAttributions;\r\n\r\n  if (!map || !map.attributionControl) return;\r\n\r\n  var attributionElement = map.attributionControl._container.querySelector('.esri-dynamic-attribution');\r\n\r\n  if (attributionElement && oldAttributions) {\r\n    var newAttributions = '';\r\n    var bounds = map.getBounds();\r\n    var wrappedBounds = latLngBounds(\r\n      bounds.getSouthWest().wrap(),\r\n      bounds.getNorthEast().wrap()\r\n    );\r\n    var zoom = map.getZoom();\r\n\r\n    for (var i = 0; i < oldAttributions.length; i++) {\r\n      var attribution = oldAttributions[i];\r\n      var text = attribution.attribution;\r\n\r\n      if (!newAttributions.match(text) && attribution.bounds.intersects(wrappedBounds) && zoom >= attribution.minZoom && zoom <= attribution.maxZoom) {\r\n        newAttributions += (', ' + text);\r\n      }\r\n    }\r\n\r\n    newAttributions = POWERED_BY_ESRI_ATTRIBUTION_STRING + ' | ' + newAttributions.substr(2);\r\n    attributionElement.innerHTML = newAttributions;\r\n    attributionElement.style.maxWidth = calcAttributionWidth(map);\r\n\r\n    map.fire('attributionupdated', {\r\n      attribution: newAttributions\r\n    });\r\n  }\r\n}\r\n\r\n// for backwards compatibility\r\nexport { warn };\r\n\r\nexport var EsriUtil = {\r\n  warn: warn,\r\n  cleanUrl: cleanUrl,\r\n  getUrlParams: getUrlParams,\r\n  isArcgisOnline: isArcgisOnline,\r\n  geojsonTypeToArcGIS: geojsonTypeToArcGIS,\r\n  responseToFeatureCollection: responseToFeatureCollection,\r\n  geojsonToArcGIS: geojsonToArcGIS,\r\n  arcgisToGeoJSON: arcgisToGeoJSON,\r\n  boundsToExtent: boundsToExtent,\r\n  extentToBounds: extentToBounds,\r\n  calcAttributionWidth: calcAttributionWidth,\r\n  setEsriAttribution: setEsriAttribution,\r\n  removeEsriAttribution: removeEsriAttribution,\r\n  _setGeometry: _setGeometry,\r\n  _getAttributionData: _getAttributionData,\r\n  _updateMapAttribution: _updateMapAttribution,\r\n  _findIdAttributeFromFeature: _findIdAttributeFromFeature,\r\n  _findIdAttributeFromResponse: _findIdAttributeFromResponse\r\n};\r\n\r\nexport default EsriUtil;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}