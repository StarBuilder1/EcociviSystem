{"ast":null,"code":"import { Util } from 'leaflet';\nimport { RasterLayer } from './RasterLayer';\nimport { getUrlParams } from '../Util';\nimport imageService from '../Services/ImageService';\nexport var ImageMapLayer = RasterLayer.extend({\n  options: {\n    updateInterval: 150,\n    format: 'jpgpng',\n    transparent: true,\n    f: 'image'\n  },\n  query: function () {\n    return this.service.query();\n  },\n  identify: function () {\n    return this.service.identify();\n  },\n  initialize: function (options) {\n    options = getUrlParams(options);\n    this.service = imageService(options);\n    this.service.addEventParent(this);\n    Util.setOptions(this, options);\n  },\n  setPixelType: function (pixelType) {\n    this.options.pixelType = pixelType;\n    this._update();\n    return this;\n  },\n  getPixelType: function () {\n    return this.options.pixelType;\n  },\n  setBandIds: function (bandIds) {\n    if (Util.isArray(bandIds)) {\n      this.options.bandIds = bandIds.join(',');\n    } else {\n      this.options.bandIds = bandIds.toString();\n    }\n    this._update();\n    return this;\n  },\n  getBandIds: function () {\n    return this.options.bandIds;\n  },\n  setNoData: function (noData, noDataInterpretation) {\n    if (Util.isArray(noData)) {\n      this.options.noData = noData.join(',');\n    } else {\n      this.options.noData = noData.toString();\n    }\n    if (noDataInterpretation) {\n      this.options.noDataInterpretation = noDataInterpretation;\n    }\n    this._update();\n    return this;\n  },\n  getNoData: function () {\n    return this.options.noData;\n  },\n  getNoDataInterpretation: function () {\n    return this.options.noDataInterpretation;\n  },\n  setRenderingRule: function (renderingRule) {\n    this.options.renderingRule = renderingRule;\n    this._update();\n  },\n  getRenderingRule: function () {\n    return this.options.renderingRule;\n  },\n  setMosaicRule: function (mosaicRule) {\n    this.options.mosaicRule = mosaicRule;\n    this._update();\n  },\n  getMosaicRule: function () {\n    return this.options.mosaicRule;\n  },\n  _getPopupData: function (e) {\n    var callback = Util.bind(function (error, results, response) {\n      if (error) {\n        return;\n      } // we really can't do anything here but authenticate or requesterror will fire\n      setTimeout(Util.bind(function () {\n        this._renderPopup(e.latlng, error, results, response);\n      }, this), 300);\n    }, this);\n    var identifyRequest = this.identify().at(e.latlng);\n\n    // set mosaic rule for identify task if it is set for layer\n    if (this.options.mosaicRule) {\n      identifyRequest.setMosaicRule(this.options.mosaicRule);\n      // @TODO: force return catalog items too?\n    }\n\n    // @TODO: set rendering rule? Not sure,\n    // sometimes you want raw pixel values\n    // if (this.options.renderingRule) {\n    //   identifyRequest.setRenderingRule(this.options.renderingRule);\n    // }\n\n    identifyRequest.run(callback);\n\n    // set the flags to show the popup\n    this._shouldRenderPopup = true;\n    this._lastClick = e.latlng;\n  },\n  _buildExportParams: function () {\n    var sr = parseInt(this._map.options.crs.code.split(':')[1], 10);\n    var params = {\n      bbox: this._calculateBbox(),\n      size: this._calculateImageSize(),\n      format: this.options.format,\n      transparent: this.options.transparent,\n      bboxSR: sr,\n      imageSR: sr\n    };\n    if (this.options.from && this.options.to) {\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\n    }\n    if (this.options.pixelType) {\n      params.pixelType = this.options.pixelType;\n    }\n    if (this.options.interpolation) {\n      params.interpolation = this.options.interpolation;\n    }\n    if (this.options.compressionQuality) {\n      params.compressionQuality = this.options.compressionQuality;\n    }\n    if (this.options.bandIds) {\n      params.bandIds = this.options.bandIds;\n    }\n\n    // 0 is falsy *and* a valid input parameter\n    if (this.options.noData === 0 || this.options.noData) {\n      params.noData = this.options.noData;\n    }\n    if (this.options.noDataInterpretation) {\n      params.noDataInterpretation = this.options.noDataInterpretation;\n    }\n    if (this.service.options.token) {\n      params.token = this.service.options.token;\n    }\n    if (this.options.renderingRule) {\n      params.renderingRule = JSON.stringify(this.options.renderingRule);\n    }\n    if (this.options.mosaicRule) {\n      params.mosaicRule = JSON.stringify(this.options.mosaicRule);\n    }\n    return params;\n  },\n  _requestExport: function (params, bounds) {\n    if (this.options.f === 'json') {\n      this.service.request('exportImage', params, function (error, response) {\n        if (error) {\n          return;\n        } // we really can't do anything here but authenticate or requesterror will fire\n        if (this.options.token) {\n          response.href += '?token=' + this.options.token;\n        }\n        if (this.options.proxy) {\n          response.href = this.options.proxy + '?' + response.href;\n        }\n        this._renderImage(response.href, bounds);\n      }, this);\n    } else {\n      params.f = 'image';\n      var fullUrl = this.options.url + 'exportImage' + Util.getParamString(params);\n      if (this.options.proxy) {\n        fullUrl = this.options.proxy + '?' + fullUrl;\n      }\n      this._renderImage(fullUrl, bounds);\n    }\n  }\n});\nexport function imageMapLayer(url, options) {\n  return new ImageMapLayer(url, options);\n}\nexport default imageMapLayer;","map":{"version":3,"names":["Util","RasterLayer","getUrlParams","imageService","ImageMapLayer","extend","options","updateInterval","format","transparent","f","query","service","identify","initialize","addEventParent","setOptions","setPixelType","pixelType","_update","getPixelType","setBandIds","bandIds","isArray","join","toString","getBandIds","setNoData","noData","noDataInterpretation","getNoData","getNoDataInterpretation","setRenderingRule","renderingRule","getRenderingRule","setMosaicRule","mosaicRule","getMosaicRule","_getPopupData","e","callback","bind","error","results","response","setTimeout","_renderPopup","latlng","identifyRequest","at","run","_shouldRenderPopup","_lastClick","_buildExportParams","sr","parseInt","_map","crs","code","split","params","bbox","_calculateBbox","size","_calculateImageSize","bboxSR","imageSR","from","to","time","valueOf","interpolation","compressionQuality","token","JSON","stringify","_requestExport","bounds","request","href","proxy","_renderImage","fullUrl","url","getParamString","imageMapLayer"],"sources":["E:/Working/IP_proj/EcosystemCivi/ecosys/node_modules/esri-leaflet/src/Layers/ImageMapLayer.js"],"sourcesContent":["import { Util } from 'leaflet';\r\nimport { RasterLayer } from './RasterLayer';\r\nimport { getUrlParams } from '../Util';\r\nimport imageService from '../Services/ImageService';\r\n\r\nexport var ImageMapLayer = RasterLayer.extend({\r\n\r\n  options: {\r\n    updateInterval: 150,\r\n    format: 'jpgpng',\r\n    transparent: true,\r\n    f: 'image'\r\n  },\r\n\r\n  query: function () {\r\n    return this.service.query();\r\n  },\r\n\r\n  identify: function () {\r\n    return this.service.identify();\r\n  },\r\n\r\n  initialize: function (options) {\r\n    options = getUrlParams(options);\r\n    this.service = imageService(options);\r\n    this.service.addEventParent(this);\r\n\r\n    Util.setOptions(this, options);\r\n  },\r\n\r\n  setPixelType: function (pixelType) {\r\n    this.options.pixelType = pixelType;\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getPixelType: function () {\r\n    return this.options.pixelType;\r\n  },\r\n\r\n  setBandIds: function (bandIds) {\r\n    if (Util.isArray(bandIds)) {\r\n      this.options.bandIds = bandIds.join(',');\r\n    } else {\r\n      this.options.bandIds = bandIds.toString();\r\n    }\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getBandIds: function () {\r\n    return this.options.bandIds;\r\n  },\r\n\r\n  setNoData: function (noData, noDataInterpretation) {\r\n    if (Util.isArray(noData)) {\r\n      this.options.noData = noData.join(',');\r\n    } else {\r\n      this.options.noData = noData.toString();\r\n    }\r\n    if (noDataInterpretation) {\r\n      this.options.noDataInterpretation = noDataInterpretation;\r\n    }\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getNoData: function () {\r\n    return this.options.noData;\r\n  },\r\n\r\n  getNoDataInterpretation: function () {\r\n    return this.options.noDataInterpretation;\r\n  },\r\n\r\n  setRenderingRule: function (renderingRule) {\r\n    this.options.renderingRule = renderingRule;\r\n    this._update();\r\n  },\r\n\r\n  getRenderingRule: function () {\r\n    return this.options.renderingRule;\r\n  },\r\n\r\n  setMosaicRule: function (mosaicRule) {\r\n    this.options.mosaicRule = mosaicRule;\r\n    this._update();\r\n  },\r\n\r\n  getMosaicRule: function () {\r\n    return this.options.mosaicRule;\r\n  },\r\n\r\n  _getPopupData: function (e) {\r\n    var callback = Util.bind(function (error, results, response) {\r\n      if (error) { return; } // we really can't do anything here but authenticate or requesterror will fire\r\n      setTimeout(Util.bind(function () {\r\n        this._renderPopup(e.latlng, error, results, response);\r\n      }, this), 300);\r\n    }, this);\r\n\r\n    var identifyRequest = this.identify().at(e.latlng);\r\n\r\n    // set mosaic rule for identify task if it is set for layer\r\n    if (this.options.mosaicRule) {\r\n      identifyRequest.setMosaicRule(this.options.mosaicRule);\r\n      // @TODO: force return catalog items too?\r\n    }\r\n\r\n    // @TODO: set rendering rule? Not sure,\r\n    // sometimes you want raw pixel values\r\n    // if (this.options.renderingRule) {\r\n    //   identifyRequest.setRenderingRule(this.options.renderingRule);\r\n    // }\r\n\r\n    identifyRequest.run(callback);\r\n\r\n    // set the flags to show the popup\r\n    this._shouldRenderPopup = true;\r\n    this._lastClick = e.latlng;\r\n  },\r\n\r\n  _buildExportParams: function () {\r\n    var sr = parseInt(this._map.options.crs.code.split(':')[1], 10);\r\n\r\n    var params = {\r\n      bbox: this._calculateBbox(),\r\n      size: this._calculateImageSize(),\r\n      format: this.options.format,\r\n      transparent: this.options.transparent,\r\n      bboxSR: sr,\r\n      imageSR: sr\r\n    };\r\n\r\n    if (this.options.from && this.options.to) {\r\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\r\n    }\r\n\r\n    if (this.options.pixelType) {\r\n      params.pixelType = this.options.pixelType;\r\n    }\r\n\r\n    if (this.options.interpolation) {\r\n      params.interpolation = this.options.interpolation;\r\n    }\r\n\r\n    if (this.options.compressionQuality) {\r\n      params.compressionQuality = this.options.compressionQuality;\r\n    }\r\n\r\n    if (this.options.bandIds) {\r\n      params.bandIds = this.options.bandIds;\r\n    }\r\n\r\n    // 0 is falsy *and* a valid input parameter\r\n    if (this.options.noData === 0 || this.options.noData) {\r\n      params.noData = this.options.noData;\r\n    }\r\n\r\n    if (this.options.noDataInterpretation) {\r\n      params.noDataInterpretation = this.options.noDataInterpretation;\r\n    }\r\n\r\n    if (this.service.options.token) {\r\n      params.token = this.service.options.token;\r\n    }\r\n\r\n    if (this.options.renderingRule) {\r\n      params.renderingRule = JSON.stringify(this.options.renderingRule);\r\n    }\r\n\r\n    if (this.options.mosaicRule) {\r\n      params.mosaicRule = JSON.stringify(this.options.mosaicRule);\r\n    }\r\n\r\n    return params;\r\n  },\r\n\r\n  _requestExport: function (params, bounds) {\r\n    if (this.options.f === 'json') {\r\n      this.service.request('exportImage', params, function (error, response) {\r\n        if (error) { return; } // we really can't do anything here but authenticate or requesterror will fire\r\n        if (this.options.token) {\r\n          response.href += ('?token=' + this.options.token);\r\n        }\r\n        if (this.options.proxy) {\r\n          response.href = this.options.proxy + '?' + response.href;\r\n        }\r\n        this._renderImage(response.href, bounds);\r\n      }, this);\r\n    } else {\r\n      params.f = 'image';\r\n      var fullUrl = this.options.url + 'exportImage' + Util.getParamString(params);\r\n      if (this.options.proxy) {\r\n        fullUrl = this.options.proxy + '?' + fullUrl;\r\n      }\r\n      this._renderImage(fullUrl, bounds);\r\n    }\r\n  }\r\n});\r\n\r\nexport function imageMapLayer (url, options) {\r\n  return new ImageMapLayer(url, options);\r\n}\r\n\r\nexport default imageMapLayer;\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAC9B,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,YAAY,QAAQ,SAAS;AACtC,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,OAAO,IAAIC,aAAa,GAAGH,WAAW,CAACI,MAAM,CAAC;EAE5CC,OAAO,EAAE;IACPC,cAAc,EAAE,GAAG;IACnBC,MAAM,EAAE,QAAQ;IAChBC,WAAW,EAAE,IAAI;IACjBC,CAAC,EAAE;EACL,CAAC;EAEDC,KAAK,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC,CAAC;EAC7B,CAAC;EAEDE,QAAQ,EAAE,SAAAA,CAAA,EAAY;IACpB,OAAO,IAAI,CAACD,OAAO,CAACC,QAAQ,CAAC,CAAC;EAChC,CAAC;EAEDC,UAAU,EAAE,SAAAA,CAAUR,OAAO,EAAE;IAC7BA,OAAO,GAAGJ,YAAY,CAACI,OAAO,CAAC;IAC/B,IAAI,CAACM,OAAO,GAAGT,YAAY,CAACG,OAAO,CAAC;IACpC,IAAI,CAACM,OAAO,CAACG,cAAc,CAAC,IAAI,CAAC;IAEjCf,IAAI,CAACgB,UAAU,CAAC,IAAI,EAAEV,OAAO,CAAC;EAChC,CAAC;EAEDW,YAAY,EAAE,SAAAA,CAAUC,SAAS,EAAE;IACjC,IAAI,CAACZ,OAAO,CAACY,SAAS,GAAGA,SAAS;IAClC,IAAI,CAACC,OAAO,CAAC,CAAC;IACd,OAAO,IAAI;EACb,CAAC;EAEDC,YAAY,EAAE,SAAAA,CAAA,EAAY;IACxB,OAAO,IAAI,CAACd,OAAO,CAACY,SAAS;EAC/B,CAAC;EAEDG,UAAU,EAAE,SAAAA,CAAUC,OAAO,EAAE;IAC7B,IAAItB,IAAI,CAACuB,OAAO,CAACD,OAAO,CAAC,EAAE;MACzB,IAAI,CAAChB,OAAO,CAACgB,OAAO,GAAGA,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;IAC1C,CAAC,MAAM;MACL,IAAI,CAAClB,OAAO,CAACgB,OAAO,GAAGA,OAAO,CAACG,QAAQ,CAAC,CAAC;IAC3C;IACA,IAAI,CAACN,OAAO,CAAC,CAAC;IACd,OAAO,IAAI;EACb,CAAC;EAEDO,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,OAAO,IAAI,CAACpB,OAAO,CAACgB,OAAO;EAC7B,CAAC;EAEDK,SAAS,EAAE,SAAAA,CAAUC,MAAM,EAAEC,oBAAoB,EAAE;IACjD,IAAI7B,IAAI,CAACuB,OAAO,CAACK,MAAM,CAAC,EAAE;MACxB,IAAI,CAACtB,OAAO,CAACsB,MAAM,GAAGA,MAAM,CAACJ,IAAI,CAAC,GAAG,CAAC;IACxC,CAAC,MAAM;MACL,IAAI,CAAClB,OAAO,CAACsB,MAAM,GAAGA,MAAM,CAACH,QAAQ,CAAC,CAAC;IACzC;IACA,IAAII,oBAAoB,EAAE;MACxB,IAAI,CAACvB,OAAO,CAACuB,oBAAoB,GAAGA,oBAAoB;IAC1D;IACA,IAAI,CAACV,OAAO,CAAC,CAAC;IACd,OAAO,IAAI;EACb,CAAC;EAEDW,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,OAAO,IAAI,CAACxB,OAAO,CAACsB,MAAM;EAC5B,CAAC;EAEDG,uBAAuB,EAAE,SAAAA,CAAA,EAAY;IACnC,OAAO,IAAI,CAACzB,OAAO,CAACuB,oBAAoB;EAC1C,CAAC;EAEDG,gBAAgB,EAAE,SAAAA,CAAUC,aAAa,EAAE;IACzC,IAAI,CAAC3B,OAAO,CAAC2B,aAAa,GAAGA,aAAa;IAC1C,IAAI,CAACd,OAAO,CAAC,CAAC;EAChB,CAAC;EAEDe,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,OAAO,IAAI,CAAC5B,OAAO,CAAC2B,aAAa;EACnC,CAAC;EAEDE,aAAa,EAAE,SAAAA,CAAUC,UAAU,EAAE;IACnC,IAAI,CAAC9B,OAAO,CAAC8B,UAAU,GAAGA,UAAU;IACpC,IAAI,CAACjB,OAAO,CAAC,CAAC;EAChB,CAAC;EAEDkB,aAAa,EAAE,SAAAA,CAAA,EAAY;IACzB,OAAO,IAAI,CAAC/B,OAAO,CAAC8B,UAAU;EAChC,CAAC;EAEDE,aAAa,EAAE,SAAAA,CAAUC,CAAC,EAAE;IAC1B,IAAIC,QAAQ,GAAGxC,IAAI,CAACyC,IAAI,CAAC,UAAUC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,EAAE;MAC3D,IAAIF,KAAK,EAAE;QAAE;MAAQ,CAAC,CAAC;MACvBG,UAAU,CAAC7C,IAAI,CAACyC,IAAI,CAAC,YAAY;QAC/B,IAAI,CAACK,YAAY,CAACP,CAAC,CAACQ,MAAM,EAAEL,KAAK,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MACvD,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAER,IAAII,eAAe,GAAG,IAAI,CAACnC,QAAQ,CAAC,CAAC,CAACoC,EAAE,CAACV,CAAC,CAACQ,MAAM,CAAC;;IAElD;IACA,IAAI,IAAI,CAACzC,OAAO,CAAC8B,UAAU,EAAE;MAC3BY,eAAe,CAACb,aAAa,CAAC,IAAI,CAAC7B,OAAO,CAAC8B,UAAU,CAAC;MACtD;IACF;;IAEA;IACA;IACA;IACA;IACA;;IAEAY,eAAe,CAACE,GAAG,CAACV,QAAQ,CAAC;;IAE7B;IACA,IAAI,CAACW,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACC,UAAU,GAAGb,CAAC,CAACQ,MAAM;EAC5B,CAAC;EAEDM,kBAAkB,EAAE,SAAAA,CAAA,EAAY;IAC9B,IAAIC,EAAE,GAAGC,QAAQ,CAAC,IAAI,CAACC,IAAI,CAAClD,OAAO,CAACmD,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAE/D,IAAIC,MAAM,GAAG;MACXC,IAAI,EAAE,IAAI,CAACC,cAAc,CAAC,CAAC;MAC3BC,IAAI,EAAE,IAAI,CAACC,mBAAmB,CAAC,CAAC;MAChCxD,MAAM,EAAE,IAAI,CAACF,OAAO,CAACE,MAAM;MAC3BC,WAAW,EAAE,IAAI,CAACH,OAAO,CAACG,WAAW;MACrCwD,MAAM,EAAEX,EAAE;MACVY,OAAO,EAAEZ;IACX,CAAC;IAED,IAAI,IAAI,CAAChD,OAAO,CAAC6D,IAAI,IAAI,IAAI,CAAC7D,OAAO,CAAC8D,EAAE,EAAE;MACxCR,MAAM,CAACS,IAAI,GAAG,IAAI,CAAC/D,OAAO,CAAC6D,IAAI,CAACG,OAAO,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAChE,OAAO,CAAC8D,EAAE,CAACE,OAAO,CAAC,CAAC;IAC7E;IAEA,IAAI,IAAI,CAAChE,OAAO,CAACY,SAAS,EAAE;MAC1B0C,MAAM,CAAC1C,SAAS,GAAG,IAAI,CAACZ,OAAO,CAACY,SAAS;IAC3C;IAEA,IAAI,IAAI,CAACZ,OAAO,CAACiE,aAAa,EAAE;MAC9BX,MAAM,CAACW,aAAa,GAAG,IAAI,CAACjE,OAAO,CAACiE,aAAa;IACnD;IAEA,IAAI,IAAI,CAACjE,OAAO,CAACkE,kBAAkB,EAAE;MACnCZ,MAAM,CAACY,kBAAkB,GAAG,IAAI,CAAClE,OAAO,CAACkE,kBAAkB;IAC7D;IAEA,IAAI,IAAI,CAAClE,OAAO,CAACgB,OAAO,EAAE;MACxBsC,MAAM,CAACtC,OAAO,GAAG,IAAI,CAAChB,OAAO,CAACgB,OAAO;IACvC;;IAEA;IACA,IAAI,IAAI,CAAChB,OAAO,CAACsB,MAAM,KAAK,CAAC,IAAI,IAAI,CAACtB,OAAO,CAACsB,MAAM,EAAE;MACpDgC,MAAM,CAAChC,MAAM,GAAG,IAAI,CAACtB,OAAO,CAACsB,MAAM;IACrC;IAEA,IAAI,IAAI,CAACtB,OAAO,CAACuB,oBAAoB,EAAE;MACrC+B,MAAM,CAAC/B,oBAAoB,GAAG,IAAI,CAACvB,OAAO,CAACuB,oBAAoB;IACjE;IAEA,IAAI,IAAI,CAACjB,OAAO,CAACN,OAAO,CAACmE,KAAK,EAAE;MAC9Bb,MAAM,CAACa,KAAK,GAAG,IAAI,CAAC7D,OAAO,CAACN,OAAO,CAACmE,KAAK;IAC3C;IAEA,IAAI,IAAI,CAACnE,OAAO,CAAC2B,aAAa,EAAE;MAC9B2B,MAAM,CAAC3B,aAAa,GAAGyC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACrE,OAAO,CAAC2B,aAAa,CAAC;IACnE;IAEA,IAAI,IAAI,CAAC3B,OAAO,CAAC8B,UAAU,EAAE;MAC3BwB,MAAM,CAACxB,UAAU,GAAGsC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACrE,OAAO,CAAC8B,UAAU,CAAC;IAC7D;IAEA,OAAOwB,MAAM;EACf,CAAC;EAEDgB,cAAc,EAAE,SAAAA,CAAUhB,MAAM,EAAEiB,MAAM,EAAE;IACxC,IAAI,IAAI,CAACvE,OAAO,CAACI,CAAC,KAAK,MAAM,EAAE;MAC7B,IAAI,CAACE,OAAO,CAACkE,OAAO,CAAC,aAAa,EAAElB,MAAM,EAAE,UAAUlB,KAAK,EAAEE,QAAQ,EAAE;QACrE,IAAIF,KAAK,EAAE;UAAE;QAAQ,CAAC,CAAC;QACvB,IAAI,IAAI,CAACpC,OAAO,CAACmE,KAAK,EAAE;UACtB7B,QAAQ,CAACmC,IAAI,IAAK,SAAS,GAAG,IAAI,CAACzE,OAAO,CAACmE,KAAM;QACnD;QACA,IAAI,IAAI,CAACnE,OAAO,CAAC0E,KAAK,EAAE;UACtBpC,QAAQ,CAACmC,IAAI,GAAG,IAAI,CAACzE,OAAO,CAAC0E,KAAK,GAAG,GAAG,GAAGpC,QAAQ,CAACmC,IAAI;QAC1D;QACA,IAAI,CAACE,YAAY,CAACrC,QAAQ,CAACmC,IAAI,EAAEF,MAAM,CAAC;MAC1C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLjB,MAAM,CAAClD,CAAC,GAAG,OAAO;MAClB,IAAIwE,OAAO,GAAG,IAAI,CAAC5E,OAAO,CAAC6E,GAAG,GAAG,aAAa,GAAGnF,IAAI,CAACoF,cAAc,CAACxB,MAAM,CAAC;MAC5E,IAAI,IAAI,CAACtD,OAAO,CAAC0E,KAAK,EAAE;QACtBE,OAAO,GAAG,IAAI,CAAC5E,OAAO,CAAC0E,KAAK,GAAG,GAAG,GAAGE,OAAO;MAC9C;MACA,IAAI,CAACD,YAAY,CAACC,OAAO,EAAEL,MAAM,CAAC;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,SAASQ,aAAaA,CAAEF,GAAG,EAAE7E,OAAO,EAAE;EAC3C,OAAO,IAAIF,aAAa,CAAC+E,GAAG,EAAE7E,OAAO,CAAC;AACxC;AAEA,eAAe+E,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}