{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//为一条数据添加属性键和属性值\nexport const createJsonData = (prop, val, OneJsonData) => {\n  if (typeof val == \"undefined\") {\n    delete OneJsonData[prop];\n  } else {\n    OneJsonData[prop] = val;\n  }\n};\n\n//为json对象数组添加数据\nexport const AddJsonData = (SecondTarget, ThirdTarget, Dataset) => {\n  var OneJsonData = {\n    Target: \"Environmental Index\"\n  };\n  //搜索Dataset数组中的所有对象，如果存在\"Factor\"属性值等于SecondTarget，且\"FactorLayer\"属性值等于ThirdTarget的对象，则不进行后续操作\n  for (var i = 0; i < Dataset.length; i++) {\n    if (Dataset[i].FactorLayer !== ThirdTarget) {\n      createJsonData(\"Factor\", SecondTarget, OneJsonData);\n      createJsonData(\"FactorLayer\", ThirdTarget, OneJsonData);\n      Dataset.push(OneJsonData);\n    }\n  }\n};\n\n//为数据集删除最后一列数据\nexport const DeleteJsonDate = Dataset => {\n  Dataset.splice(Dataset.length - 1, 1);\n};\n\n//为Json数据集的其中一条数据添加属性键和属性值\nexport const createJsonDataOfDatatset = (prop, val, Dataset, index) => {\n  createJsonData(prop, val, Dataset[index]);\n};\n\n//计算每个权重和数据指标值\nexport const CalculateData = Dataset => {\n  //第一遍循环先计算因子层的数据\n  var TempIndex = 0;\n  var DataSum = Number(Dataset[0].FactorLayerData) * Number(Dataset[0].FactorLayerWeight);\n  var WeightSum = Number(Dataset[0].FactorLayerWeight);\n  var Result;\n  for (var i = 0; i < Dataset.length; i++) {\n    if (Object.prototype.hasOwnProperty.call(Dataset[i], \"FactorWeight\")) {\n      if (i != 0) {\n        Result = DataSum / WeightSum;\n        createJsonDataOfDatatset(\"FactorData\", Result, Dataset, TempIndex);\n        DataSum = Number(Dataset[i].FactorLayerData) * Number(Dataset[i].FactorLayerWeight);\n        WeightSum = Number(Dataset[i].FactorLayerWeight);\n      }\n      TempIndex = i;\n    } else {\n      DataSum = DataSum + Number(Dataset[i].FactorLayerData) * Number(Dataset[i].FactorLayerWeight);\n      WeightSum = Number(WeightSum) + Number(Dataset[i].FactorLayerWeight);\n    }\n  }\n  Result = DataSum / WeightSum;\n  createJsonDataOfDatatset(\"FactorData\", Result, Dataset, TempIndex);\n  //循环目标层数据\n  TempIndex = 0;\n  DataSum = 0;\n  WeightSum = 0;\n  for (i = 0; i < Dataset.length; i++) {\n    if (Object.prototype.hasOwnProperty.call(Dataset[i], \"FactorData\")) {\n      DataSum = DataSum + Number(Dataset[i].FactorData) * Number(Dataset[i].FactorWeight);\n      WeightSum = WeightSum + Number(Dataset[i].FactorWeight);\n    }\n  }\n  Result = DataSum / WeightSum;\n  createJsonDataOfDatatset(\"TargetData\", Result, Dataset, TempIndex);\n};\n\n//最后结果的展示\n// export const ShowResult = (Dataset, ListColumn1, ListColumn2) => {\n//   let ResultList = JSON.stringify(Dataset, [ListColumn1, ListColumn2]);\n//   ResultList = JSON.parse(ResultList);\n//   return ResultList;\n// };","map":{"version":3,"names":["createJsonData","prop","val","OneJsonData","AddJsonData","SecondTarget","ThirdTarget","Dataset","Target","i","length","FactorLayer","push","DeleteJsonDate","splice","createJsonDataOfDatatset","index","CalculateData","TempIndex","DataSum","Number","FactorLayerData","FactorLayerWeight","WeightSum","Result","Object","prototype","hasOwnProperty","call","FactorData","FactorWeight"],"sources":["E:/Working/IP_proj/EcociviSystem/ecosys/src/views/EvaluateAnalyze/js/optionData.js"],"sourcesContent":["//为一条数据添加属性键和属性值\r\nexport const createJsonData = (prop, val, OneJsonData) => {\r\n  if (typeof val == \"undefined\") {\r\n    delete OneJsonData[prop];\r\n  } else {\r\n    OneJsonData[prop] = val;\r\n  }\r\n};\r\n\r\n//为json对象数组添加数据\r\nexport const AddJsonData = (SecondTarget, ThirdTarget, Dataset) => {\r\n  var OneJsonData = { Target: \"Environmental Index\" };\r\n  //搜索Dataset数组中的所有对象，如果存在\"Factor\"属性值等于SecondTarget，且\"FactorLayer\"属性值等于ThirdTarget的对象，则不进行后续操作\r\n  for (var i = 0; i < Dataset.length; i++) {\r\n    if (Dataset[i].FactorLayer !== ThirdTarget) {\r\n      createJsonData(\"Factor\", SecondTarget, OneJsonData);\r\n      createJsonData(\"FactorLayer\", ThirdTarget, OneJsonData);\r\n      Dataset.push(OneJsonData);\r\n    }\r\n  }\r\n};\r\n\r\n//为数据集删除最后一列数据\r\nexport const DeleteJsonDate = (Dataset) => {\r\n  Dataset.splice(Dataset.length - 1, 1);\r\n};\r\n\r\n//为Json数据集的其中一条数据添加属性键和属性值\r\nexport const createJsonDataOfDatatset = (prop, val, Dataset, index) => {\r\n  createJsonData(prop, val, Dataset[index]);\r\n};\r\n\r\n//计算每个权重和数据指标值\r\nexport const CalculateData = (Dataset) => {\r\n  //第一遍循环先计算因子层的数据\r\n  var TempIndex = 0;\r\n  var DataSum =\r\n    Number(Dataset[0].FactorLayerData) * Number(Dataset[0].FactorLayerWeight);\r\n  var WeightSum = Number(Dataset[0].FactorLayerWeight);\r\n  var Result;\r\n  for (var i = 0; i < Dataset.length; i++) {\r\n    if (Object.prototype.hasOwnProperty.call(Dataset[i], \"FactorWeight\")) {\r\n      if (i != 0) {\r\n        Result = DataSum / WeightSum;\r\n        createJsonDataOfDatatset(\"FactorData\", Result, Dataset, TempIndex);\r\n        DataSum =\r\n          Number(Dataset[i].FactorLayerData) *\r\n          Number(Dataset[i].FactorLayerWeight);\r\n        WeightSum = Number(Dataset[i].FactorLayerWeight);\r\n      }\r\n      TempIndex = i;\r\n    } else {\r\n      DataSum =\r\n        DataSum +\r\n        Number(Dataset[i].FactorLayerData) *\r\n          Number(Dataset[i].FactorLayerWeight);\r\n      WeightSum = Number(WeightSum) + Number(Dataset[i].FactorLayerWeight);\r\n    }\r\n  }\r\n  Result = DataSum / WeightSum;\r\n  createJsonDataOfDatatset(\"FactorData\", Result, Dataset, TempIndex);\r\n  //循环目标层数据\r\n  TempIndex = 0;\r\n  DataSum = 0;\r\n  WeightSum = 0;\r\n  for (i = 0; i < Dataset.length; i++) {\r\n    if (Object.prototype.hasOwnProperty.call(Dataset[i], \"FactorData\")) {\r\n      DataSum =\r\n        DataSum +\r\n        Number(Dataset[i].FactorData) * Number(Dataset[i].FactorWeight);\r\n      WeightSum = WeightSum + Number(Dataset[i].FactorWeight);\r\n    }\r\n  }\r\n  Result = DataSum / WeightSum;\r\n  createJsonDataOfDatatset(\"TargetData\", Result, Dataset, TempIndex);\r\n};\r\n\r\n//最后结果的展示\r\n// export const ShowResult = (Dataset, ListColumn1, ListColumn2) => {\r\n//   let ResultList = JSON.stringify(Dataset, [ListColumn1, ListColumn2]);\r\n//   ResultList = JSON.parse(ResultList);\r\n//   return ResultList;\r\n// };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}