{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GetTableData } from \"@/views/EvaluateAnalyze/js/getData\";\nexport default {\n  name: \"AnalyzePage\",\n  data() {\n    return {\n      currentYear: new Date().getFullYear(),\n      SDGListA: [],\n      needMergeArr1: [\"维度\", \"具体目标\", \"评价指标\"],\n      rowMergeArrs1: {},\n      SDGListB: [],\n      needMergeArr2: [\"目标\", \"具体目标\"],\n      rowMergeArrs2: {},\n      SDGListC: [],\n      needMergeArr3: [\"领域\", \"指数\"],\n      rowMergeArrs3: {},\n      SDGListD: [],\n      needMergeArr4: [\"一级指标\", \"二级指标\"],\n      rowMergeArrs4: {}\n    };\n  },\n  methods: {\n    initListData() {\n      this.SDGListA = GetTableData(\"ListA\");\n      this.SDGListB = GetTableData(\"ListB\");\n      this.SDGListC = GetTableData(\"ListC\");\n      this.SDGListD = GetTableData(\"ListD\");\n    },\n    arraySpanMethod1({\n      column,\n      rowIndex\n    }) {\n      // 把需要循环的列名加入\n      if (column.property === \"维度\") return this.mergeAction1(\"维度\", rowIndex);\n      if (column.property === \"具体目标\") return this.mergeAction1(\"具体目标\", rowIndex);\n      if (column.property === \"评价指标\") return this.mergeAction1(\"评价指标\", rowIndex);\n    },\n    arraySpanMethod2({\n      column,\n      rowIndex\n    }) {\n      // 把需要循环的列名加入\n      if (column.property === \"目标\") return this.mergeAction2(\"目标\", rowIndex);\n      if (column.property === \"具体目标\") return this.mergeAction2(\"具体目标\", rowIndex);\n    },\n    arraySpanMethod3({\n      column,\n      rowIndex\n    }) {\n      // 把需要循环的列名加入\n      if (column.property === \"领域\") return this.mergeAction3(\"领域\", rowIndex);\n      if (column.property === \"指数\") return this.mergeAction3(\"指数\", rowIndex);\n    },\n    arraySpanMethod4({\n      column,\n      rowIndex\n    }) {\n      // 把需要循环的列名加入\n      if (column.property === \"一级指标\") return this.mergeAction4(\"一级指标\", rowIndex);\n      if (column.property === \"二级指标\") return this.mergeAction4(\"二级指标\", rowIndex);\n    },\n    mergeAction1(val, rowIndex) {\n      let _row = this.rowMergeArrs1[val].rowArr[rowIndex];\n      let _col = _row > 0 ? 1 : 0;\n      return [_row, _col];\n    },\n    mergeAction2(val, rowIndex) {\n      let _row = this.rowMergeArrs2[val].rowArr[rowIndex];\n      let _col = _row > 0 ? 1 : 0;\n      return [_row, _col];\n    },\n    mergeAction3(val, rowIndex) {\n      let _row = this.rowMergeArrs3[val].rowArr[rowIndex];\n      let _col = _row > 0 ? 1 : 0;\n      return [_row, _col];\n    },\n    mergeAction4(val, rowIndex) {\n      let _row = this.rowMergeArrs4[val].rowArr[rowIndex];\n      let _col = _row > 0 ? 1 : 0;\n      return [_row, _col];\n    },\n    rowMergeHandle(arr, data) {\n      if (!Array.isArray(arr) && !arr.length) return false;\n      if (!Array.isArray(data) && !data.length) return false;\n      let needMerge = {};\n      arr.forEach(i => {\n        needMerge[i] = {\n          rowArr: [],\n          rowMergeNum: 0\n        };\n        data.forEach((item, index) => {\n          if (index === 0) {\n            needMerge[i].rowArr.push(1);\n            needMerge[i].rowMergeNum = 0;\n          } else {\n            if (item[i] === data[index - 1][i]) {\n              needMerge[i].rowArr[needMerge[i].rowMergeNum] += 1;\n              needMerge[i].rowArr.push(0);\n            } else {\n              needMerge[i].rowArr.push(1);\n              needMerge[i].rowMergeNum = index;\n            }\n          }\n        });\n      });\n      return needMerge;\n    }\n  },\n  mounted() {\n    this.initListData();\n    this.rowMergeArrs1 = this.rowMergeHandle(this.needMergeArr1, this.SDGListA);\n    this.rowMergeArrs2 = this.rowMergeHandle(this.needMergeArr2, this.SDGListB);\n    this.rowMergeArrs3 = this.rowMergeHandle(this.needMergeArr3, this.SDGListC);\n    this.rowMergeArrs4 = this.rowMergeHandle(this.needMergeArr4, this.SDGListD);\n  }\n};","map":{"version":3,"names":["GetTableData","name","data","currentYear","Date","getFullYear","SDGListA","needMergeArr1","rowMergeArrs1","SDGListB","needMergeArr2","rowMergeArrs2","SDGListC","needMergeArr3","rowMergeArrs3","SDGListD","needMergeArr4","rowMergeArrs4","methods","initListData","arraySpanMethod1","column","rowIndex","property","mergeAction1","arraySpanMethod2","mergeAction2","arraySpanMethod3","mergeAction3","arraySpanMethod4","mergeAction4","val","_row","rowArr","_col","rowMergeHandle","arr","Array","isArray","length","needMerge","forEach","i","rowMergeNum","item","index","push","mounted"],"sources":["src/views/EvaluateAnalyze/views/AnalyzePage.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"data-show\">\r\n    <el-header>\r\n      <el-menu\r\n        :default-active=\"activeIndex\"\r\n        class=\"data-show-header\"\r\n        mode=\"horizontal\"\r\n        background-color=\"#001529\"\r\n      >\r\n        <el-row>\r\n          <el-col :span=\"2\" :offset=\"1\">\r\n            <a\r\n              class=\"header-logo\"\r\n              href=\"/SdgPlatform\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <div></div>\r\n            </a>\r\n          </el-col>\r\n\r\n          <el-col :span=\"6\" :offset=\"1\">\r\n            <h1 class=\"data-show-header-banner\">生态文明评估分析系统</h1>\r\n          </el-col>\r\n        </el-row>\r\n      </el-menu>\r\n    </el-header>\r\n\r\n    <el-main class=\"data-show-main\">\r\n      <el-row class=\"data-show-content\">\r\n        <div class=\"data-show-excel\">\r\n          <el-tabs style=\"height: 100%; width: 100%\">\r\n            <el-tab-pane\r\n              label=\"面向SDGs的美丽中国内涵与指标体系\"\r\n              class=\"AnalyzeTitle\"\r\n            >\r\n              <el-table\r\n                class=\"tableStyle data-show-table\"\r\n                :data=\"SDGListA\"\r\n                :span-method=\"arraySpanMethod1\"\r\n                max-height=\"700\"\r\n                border\r\n              >\r\n                <el-table-column prop=\"维度\" label=\"维度\"> </el-table-column>\r\n                <el-table-column prop=\"具体目标\" label=\"具体目标\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"评价指标\" label=\"评价指标\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"指标解释\" label=\"指标解释\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"指标来源\" label=\"指标来源\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"长江中下游平原“美丽中国”全景评价指标体系\">\r\n              <el-table\r\n                class=\"tableStyle data-show-table\"\r\n                :data=\"SDGListB\"\r\n                :span-method=\"arraySpanMethod2\"\r\n                max-height=\"700\"\r\n                border\r\n              >\r\n                <el-table-column prop=\"目标\" label=\"目标\"> </el-table-column>\r\n                <el-table-column prop=\"具体目标\" label=\"具体目标\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"具体指标\" label=\"具体指标\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"典型城市群（长三角）的市域生态文明水平评估体系\">\r\n              <el-table\r\n                class=\"tableStyle data-show-table\"\r\n                :data=\"SDGListC\"\r\n                :span-method=\"arraySpanMethod3\"\r\n                max-height=\"700\"\r\n                border\r\n              >\r\n                <el-table-column prop=\"序号\" label=\"序号\"> </el-table-column>\r\n                <el-table-column prop=\"领域\" label=\"领域\"> </el-table-column>\r\n                <el-table-column prop=\"指数\" label=\"指数\"> </el-table-column>\r\n                <el-table-column prop=\"指标\" label=\"指标\"> </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"长江经济带狭义绿色发展水平评估指标体系\">\r\n              <el-table\r\n                class=\"tableStyle data-show-table\"\r\n                :data=\"SDGListD\"\r\n                :span-method=\"arraySpanMethod4\"\r\n                max-height=\"700\"\r\n                border\r\n              >\r\n                <el-table-column prop=\"一级指标\" label=\"一级指标\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"二级指标\" label=\"二级指标\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"评价因子\" label=\"评价因子\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </div>\r\n      </el-row>\r\n    </el-main>\r\n\r\n    <el-footer class=\"data-show-footer\" style=\"height: 20px\">\r\n      <span>\r\n        <a\r\n          href=\"http://geomodeling.njnu.edu.cn//\"\r\n          target=\"__blank\"\r\n          rel=\"noopener noreferrer\"\r\n          >Open Geographic Modeling and Simulation</a\r\n        >\r\n        | Copyright © 2011-{{ currentYear }} OpenGMS. All Rights Reserved.\r\n      </span>\r\n    </el-footer>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport { GetTableData } from \"@/views/EvaluateAnalyze/js/getData\";\r\nexport default {\r\n  name: \"AnalyzePage\",\r\n  data() {\r\n    return {\r\n      currentYear: new Date().getFullYear(),\r\n\r\n      SDGListA: [],\r\n      needMergeArr1: [\"维度\", \"具体目标\", \"评价指标\"],\r\n      rowMergeArrs1: {},\r\n      SDGListB: [],\r\n      needMergeArr2: [\"目标\", \"具体目标\"],\r\n      rowMergeArrs2: {},\r\n      SDGListC: [],\r\n      needMergeArr3: [\"领域\", \"指数\"],\r\n      rowMergeArrs3: {},\r\n      SDGListD: [],\r\n      needMergeArr4: [\"一级指标\", \"二级指标\"],\r\n      rowMergeArrs4: {},\r\n    };\r\n  },\r\n  methods: {\r\n    initListData() {\r\n      this.SDGListA = GetTableData(\"ListA\");\r\n      this.SDGListB = GetTableData(\"ListB\");\r\n      this.SDGListC = GetTableData(\"ListC\");\r\n      this.SDGListD = GetTableData(\"ListD\");\r\n    },\r\n    arraySpanMethod1({ column, rowIndex }) {\r\n      // 把需要循环的列名加入\r\n      if (column.property === \"维度\")\r\n        return this.mergeAction1(\"维度\", rowIndex);\r\n      if (column.property === \"具体目标\")\r\n        return this.mergeAction1(\"具体目标\", rowIndex);\r\n      if (column.property === \"评价指标\")\r\n        return this.mergeAction1(\"评价指标\", rowIndex);\r\n    },\r\n    arraySpanMethod2({ column, rowIndex }) {\r\n      // 把需要循环的列名加入\r\n      if (column.property === \"目标\")\r\n        return this.mergeAction2(\"目标\", rowIndex);\r\n      if (column.property === \"具体目标\")\r\n        return this.mergeAction2(\"具体目标\", rowIndex);\r\n    },\r\n    arraySpanMethod3({ column, rowIndex }) {\r\n      // 把需要循环的列名加入\r\n      if (column.property === \"领域\")\r\n        return this.mergeAction3(\"领域\", rowIndex);\r\n      if (column.property === \"指数\")\r\n        return this.mergeAction3(\"指数\", rowIndex);\r\n    },\r\n    arraySpanMethod4({ column, rowIndex }) {\r\n      // 把需要循环的列名加入\r\n      if (column.property === \"一级指标\")\r\n        return this.mergeAction4(\"一级指标\", rowIndex);\r\n      if (column.property === \"二级指标\")\r\n        return this.mergeAction4(\"二级指标\", rowIndex);\r\n    },\r\n    mergeAction1(val, rowIndex) {\r\n      let _row = this.rowMergeArrs1[val].rowArr[rowIndex];\r\n      let _col = _row > 0 ? 1 : 0;\r\n      return [_row, _col];\r\n    },\r\n    mergeAction2(val, rowIndex) {\r\n      let _row = this.rowMergeArrs2[val].rowArr[rowIndex];\r\n      let _col = _row > 0 ? 1 : 0;\r\n      return [_row, _col];\r\n    },\r\n    mergeAction3(val, rowIndex) {\r\n      let _row = this.rowMergeArrs3[val].rowArr[rowIndex];\r\n      let _col = _row > 0 ? 1 : 0;\r\n      return [_row, _col];\r\n    },\r\n    mergeAction4(val, rowIndex) {\r\n      let _row = this.rowMergeArrs4[val].rowArr[rowIndex];\r\n      let _col = _row > 0 ? 1 : 0;\r\n      return [_row, _col];\r\n    },\r\n    rowMergeHandle(arr, data) {\r\n      if (!Array.isArray(arr) && !arr.length) return false;\r\n      if (!Array.isArray(data) && !data.length) return false;\r\n      let needMerge = {};\r\n      arr.forEach((i) => {\r\n        needMerge[i] = {\r\n          rowArr: [],\r\n          rowMergeNum: 0,\r\n        };\r\n        data.forEach((item, index) => {\r\n          if (index === 0) {\r\n            needMerge[i].rowArr.push(1);\r\n            needMerge[i].rowMergeNum = 0;\r\n          } else {\r\n            if (item[i] === data[index - 1][i]) {\r\n              needMerge[i].rowArr[needMerge[i].rowMergeNum] += 1;\r\n              needMerge[i].rowArr.push(0);\r\n            } else {\r\n              needMerge[i].rowArr.push(1);\r\n              needMerge[i].rowMergeNum = index;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      return needMerge;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initListData();\r\n    this.rowMergeArrs1 = this.rowMergeHandle(this.needMergeArr1, this.SDGListA);\r\n    this.rowMergeArrs2 = this.rowMergeHandle(this.needMergeArr2, this.SDGListB);\r\n    this.rowMergeArrs3 = this.rowMergeHandle(this.needMergeArr3, this.SDGListC);\r\n    this.rowMergeArrs4 = this.rowMergeHandle(this.needMergeArr4, this.SDGListD);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.data-show {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.data-show-main {\r\n  height: 95%;\r\n  width: 100%;\r\n}\r\n\r\ndata-show,\r\ndata-show-main,\r\n.data-show-content > div {\r\n  height: 100%;\r\n}\r\n\r\n.data-show-content {\r\n  padding: 30px 20px;\r\n}\r\n\r\n.data-show-excel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n}\r\n\r\n.AnalyzeTitle {\r\n  color: #ffffff;\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  line-height: 1.2;\r\n  font-family: \"Oswald-Bold\";\r\n}\r\n\r\n.data-show-table {\r\n  height: 95%;\r\n  width: 95%;\r\n  margin-left: 2.5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n/deep/.el-tabs__item {\r\n  padding: 0 20px;\r\n  height: 40px;\r\n  box-sizing: border-box;\r\n  display: inline-block;\r\n  list-style: none;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  margin-left: 2px;\r\n  color: #ffffff;\r\n}\r\n\r\n/deep/.el_tabs_content {\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}