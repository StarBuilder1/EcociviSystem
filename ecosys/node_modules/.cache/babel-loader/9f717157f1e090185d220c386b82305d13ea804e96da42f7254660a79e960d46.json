{"ast":null,"code":"function BinarySearchIndex(values) {\n  this.values = [].concat(values || []);\n}\nBinarySearchIndex.prototype.query = function (value) {\n  var index = this.getIndex(value);\n  return this.values[index];\n};\nBinarySearchIndex.prototype.getIndex = function getIndex(value) {\n  if (this.dirty) {\n    this.sort();\n  }\n  var minIndex = 0;\n  var maxIndex = this.values.length - 1;\n  var currentIndex;\n  var currentElement;\n  while (minIndex <= maxIndex) {\n    currentIndex = (minIndex + maxIndex) / 2 | 0;\n    currentElement = this.values[Math.round(currentIndex)];\n    if (+currentElement.value < +value) {\n      minIndex = currentIndex + 1;\n    } else if (+currentElement.value > +value) {\n      maxIndex = currentIndex - 1;\n    } else {\n      return currentIndex;\n    }\n  }\n  return Math.abs(~maxIndex);\n};\nBinarySearchIndex.prototype.between = function between(start, end) {\n  var startIndex = this.getIndex(start);\n  var endIndex = this.getIndex(end);\n  if (startIndex === 0 && endIndex === 0) {\n    return [];\n  }\n  while (this.values[startIndex - 1] && this.values[startIndex - 1].value === start) {\n    startIndex--;\n  }\n  while (this.values[endIndex + 1] && this.values[endIndex + 1].value === end) {\n    endIndex++;\n  }\n  if (this.values[endIndex] && this.values[endIndex].value === end && this.values[endIndex + 1]) {\n    endIndex++;\n  }\n  return this.values.slice(startIndex, endIndex);\n};\nBinarySearchIndex.prototype.insert = function insert(item) {\n  this.values.splice(this.getIndex(item.value), 0, item);\n  return this;\n};\nBinarySearchIndex.prototype.bulkAdd = function bulkAdd(items, sort) {\n  this.values = this.values.concat([].concat(items || []));\n  if (sort) {\n    this.sort();\n  } else {\n    this.dirty = true;\n  }\n  return this;\n};\nBinarySearchIndex.prototype.sort = function sort() {\n  this.values.sort(function (a, b) {\n    return +b.value - +a.value;\n  }).reverse();\n  this.dirty = false;\n  return this;\n};\nexport default BinarySearchIndex;","map":{"version":3,"names":["BinarySearchIndex","values","concat","prototype","query","value","index","getIndex","dirty","sort","minIndex","maxIndex","length","currentIndex","currentElement","Math","round","abs","between","start","end","startIndex","endIndex","slice","insert","item","splice","bulkAdd","items","a","b","reverse"],"sources":["E:/Working/IP_proj/EcosystemCivi/ecosys/node_modules/tiny-binary-search/index.js"],"sourcesContent":["function BinarySearchIndex (values) {\n  this.values = [].concat(values || []);\n}\n\nBinarySearchIndex.prototype.query = function (value) {\n  var index = this.getIndex(value);\n  return this.values[index];\n};\n\nBinarySearchIndex.prototype.getIndex = function getIndex (value) {\n  if (this.dirty) {\n    this.sort();\n  }\n\n  var minIndex = 0;\n  var maxIndex = this.values.length - 1;\n  var currentIndex;\n  var currentElement;\n\n  while (minIndex <= maxIndex) {\n    currentIndex = (minIndex + maxIndex) / 2 | 0;\n    currentElement = this.values[Math.round(currentIndex)];\n    if (+currentElement.value < +value) {\n      minIndex = currentIndex + 1;\n    } else if (+currentElement.value > +value) {\n      maxIndex = currentIndex - 1;\n    } else {\n      return currentIndex;\n    }\n  }\n\n  return Math.abs(~maxIndex);\n};\n\nBinarySearchIndex.prototype.between = function between (start, end) {\n  var startIndex = this.getIndex(start);\n  var endIndex = this.getIndex(end);\n\n  if (startIndex === 0 && endIndex === 0) {\n    return [];\n  }\n\n  while (this.values[startIndex - 1] && this.values[startIndex - 1].value === start) {\n    startIndex--;\n  }\n\n  while (this.values[endIndex + 1] && this.values[endIndex + 1].value === end) {\n    endIndex++;\n  }\n\n  if (this.values[endIndex] && this.values[endIndex].value === end && this.values[endIndex + 1]) {\n    endIndex++;\n  }\n\n  return this.values.slice(startIndex, endIndex);\n};\n\nBinarySearchIndex.prototype.insert = function insert (item) {\n  this.values.splice(this.getIndex(item.value), 0, item);\n  return this;\n};\n\nBinarySearchIndex.prototype.bulkAdd = function bulkAdd (items, sort) {\n  this.values = this.values.concat([].concat(items || []));\n\n  if (sort) {\n    this.sort();\n  } else {\n    this.dirty = true;\n  }\n\n  return this;\n};\n\nBinarySearchIndex.prototype.sort = function sort () {\n  this.values.sort(function (a, b) {\n    return +b.value - +a.value;\n  }).reverse();\n  this.dirty = false;\n  return this;\n};\n\nexport default BinarySearchIndex;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}