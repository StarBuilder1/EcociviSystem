{"ast":null,"code":"import { AnalyzeMap } from \"../../js/AnalyzeMap\";\n// import AustriaData from \"../../../../../public/JsonAnalyze/AustriaData.json\";\nimport CountryData from \"../../../../../public/JsonAnalyze/CountryData.json\";\nimport axios from \"axios\";\n//Use Global to store data\nimport Global from \"../../views/Globel/Global\";\nconst SelectOption = [\"World\", \"Austria\", \"Delete\"];\nexport default {\n  name: \"SystemMap\",\n  data() {\n    return {\n      GeoJsonGroup: [\"Delete\"],\n      SelectOp: SelectOption\n    };\n  },\n  methods: {\n    mapInit() {\n      this.mapobj = new AnalyzeMap(\"data-show-map\");\n    },\n    CheckBoxclickMap() {\n      console.log(this.GeoJsonGroup);\n      if (this.GeoJsonGroup == \"World\") {\n        //Switch options and reset the array\n        Global.MapClickName.length = 0;\n        this.mapobj.RemoveJson();\n        this.mapobj.AddGeoJson(CountryData.world);\n      }\n      if (this.GeoJsonGroup == \"Austria\") {\n        Global.MapClickName.length = 0;\n        this.mapobj.RemoveJson();\n        //add austria data by axios\n        axios.get(\"http://localhost:8050/api/data\").then(response => {\n          // 获取到后端返回的数据\n          const data = response.data;\n          this.mapobj.AddGeoJson(data.austria);\n        }).catch(error => {\n          console.error(\"Error fetching data from backend:\", error);\n        });\n      }\n      if (this.GeoJsonGroup == \"Delete\") {\n        Global.MapClickName.length = 0;\n        this.mapobj.RemoveJson();\n      }\n    }\n  },\n  mounted() {\n    this.mapInit();\n  },\n  beforeDestroy() {\n    this.mapobj && this.mapobj.destroy();\n  }\n};","map":{"version":3,"names":["AnalyzeMap","CountryData","axios","Global","SelectOption","name","data","GeoJsonGroup","SelectOp","methods","mapInit","mapobj","CheckBoxclickMap","console","log","MapClickName","length","RemoveJson","AddGeoJson","world","get","then","response","austria","catch","error","mounted","beforeDestroy","destroy"],"sources":["src/views/EvaluateAnalyze/views/SystemPageComponent/SystemMap.vue"],"sourcesContent":["<template>\r\n  <el-container style=\"width: 100%; height: 100%; background-color: #ffffff\">\r\n    <el-col class=\"data-show-map-wrapper\">\r\n      <div id=\"data-show-map\">\r\n        <div class=\"leaflet-control\">\r\n          <el-radio-group\r\n            v-model=\"GeoJsonGroup\"\r\n            class=\"leaflet-right map-select\"\r\n          >\r\n            <el-radio-button\r\n              @change.native=\"CheckBoxclickMap\"\r\n              v-for=\"Select in SelectOp\"\r\n              :label=\"Select\"\r\n              :key=\"Select\"\r\n            ></el-radio-button>\r\n          </el-radio-group>\r\n        </div>\r\n      </div>\r\n    </el-col>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport { AnalyzeMap } from \"../../js/AnalyzeMap\";\r\n// import AustriaData from \"../../../../../public/JsonAnalyze/AustriaData.json\";\r\nimport CountryData from \"../../../../../public/JsonAnalyze/CountryData.json\";\r\nimport axios from \"axios\";\r\n//Use Global to store data\r\nimport Global from \"../../views/Globel/Global\";\r\n\r\nconst SelectOption = [\"World\", \"Austria\", \"Delete\"];\r\n\r\nexport default {\r\n  name: \"SystemMap\",\r\n  data() {\r\n    return {\r\n      GeoJsonGroup: [\"Delete\"],\r\n      SelectOp: SelectOption,\r\n    };\r\n  },\r\n  methods: {\r\n    mapInit() {\r\n      this.mapobj = new AnalyzeMap(\"data-show-map\");\r\n    },\r\n    CheckBoxclickMap() {\r\n      console.log(this.GeoJsonGroup);\r\n      if (this.GeoJsonGroup == \"World\") {\r\n        //Switch options and reset the array\r\n        Global.MapClickName.length = 0;\r\n        this.mapobj.RemoveJson();\r\n        this.mapobj.AddGeoJson(CountryData.world);\r\n      }\r\n      if (this.GeoJsonGroup == \"Austria\") {\r\n        Global.MapClickName.length = 0;\r\n        this.mapobj.RemoveJson();\r\n        //add austria data by axios\r\n        axios\r\n          .get(\"http://localhost:8050/api/data\")\r\n          .then((response) => {\r\n            // 获取到后端返回的数据\r\n            const data = response.data;\r\n            this.mapobj.AddGeoJson(data.austria);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching data from backend:\", error);\r\n          });\r\n      }\r\n      if (this.GeoJsonGroup == \"Delete\") {\r\n        Global.MapClickName.length = 0;\r\n        this.mapobj.RemoveJson();\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.mapInit();\r\n  },\r\n  beforeDestroy() {\r\n    this.mapobj && this.mapobj.destroy();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.data-show-map-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  background-size: 100% 100%;\r\n}\r\n#data-show-map {\r\n  height: 95%;\r\n  width: 97%;\r\n  position: relative;\r\n}\r\n\r\n.map-select {\r\n  position: fixed;\r\n  padding-top: 40px;\r\n  padding-right: 50px;\r\n}\r\n</style>\r\n"],"mappings":"AAuBA,SAAAA,UAAA;AACA;AACA,OAAAC,WAAA;AACA,OAAAC,KAAA;AACA;AACA,OAAAC,MAAA;AAEA,MAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,QAAA,EAAAJ;IACA;EACA;EACAK,OAAA;IACAC,QAAA;MACA,KAAAC,MAAA,OAAAX,UAAA;IACA;IACAY,iBAAA;MACAC,OAAA,CAAAC,GAAA,MAAAP,YAAA;MACA,SAAAA,YAAA;QACA;QACAJ,MAAA,CAAAY,YAAA,CAAAC,MAAA;QACA,KAAAL,MAAA,CAAAM,UAAA;QACA,KAAAN,MAAA,CAAAO,UAAA,CAAAjB,WAAA,CAAAkB,KAAA;MACA;MACA,SAAAZ,YAAA;QACAJ,MAAA,CAAAY,YAAA,CAAAC,MAAA;QACA,KAAAL,MAAA,CAAAM,UAAA;QACA;QACAf,KAAA,CACAkB,GAAA,mCACAC,IAAA,CAAAC,QAAA;UACA;UACA,MAAAhB,IAAA,GAAAgB,QAAA,CAAAhB,IAAA;UACA,KAAAK,MAAA,CAAAO,UAAA,CAAAZ,IAAA,CAAAiB,OAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAZ,OAAA,CAAAY,KAAA,sCAAAA,KAAA;QACA;MACA;MACA,SAAAlB,YAAA;QACAJ,MAAA,CAAAY,YAAA,CAAAC,MAAA;QACA,KAAAL,MAAA,CAAAM,UAAA;MACA;IACA;EACA;EAEAS,QAAA;IACA,KAAAhB,OAAA;EACA;EACAiB,cAAA;IACA,KAAAhB,MAAA,SAAAA,MAAA,CAAAiB,OAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}